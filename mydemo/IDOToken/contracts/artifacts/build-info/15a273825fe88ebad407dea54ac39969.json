{
	"id": "15a273825fe88ebad407dea54ac39969",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/USDT.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity >=0.6.12;\n\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ncontract Initializable {\n\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  bool private initialized;\n\n  /**\n   * @dev Indicates that the contract is in the process of being initialized.\n   */\n  bool private initializing;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n\n    bool isTopLevelCall = !initializing;\n    if (isTopLevelCall) {\n      initializing = true;\n      initialized = true;\n    }\n\n    _;\n\n    if (isTopLevelCall) {\n      initializing = false;\n    }\n  }\n\n  /// @dev Returns true if and only if the function is running in the constructor\n  function isConstructor() private view returns (bool) {\n    // extcodesize checks the size of the code stored in an address, and\n    // address returns the current address. Since the code is still not\n    // deployed when running a constructor, any checks on its code size will\n    // yield zero, making it an effective way to detect if a contract is\n    // under construction or not.\n    address self = address(this);\n    uint256 cs;\n    assembly { cs := extcodesize(self) }\n    return cs == 0;\n  }\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\ncontract USDT is Initializable,Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n\n    function initialize() public initializer{\n        _name = \"usdt\";\n        _symbol = \"USDT\";\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    function mint(address _account,uint _amount)public virtual returns (bool) {\n        _mint(_account, _amount);\n        return true;\n    }\n    /**\n     * @dev See {IERC20-transfer}\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        // unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        // }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        // unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        // }\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        // unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        // }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        // unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        // }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            // unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            // }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/USDT.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDT.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/USDT.sol\":{\"keccak256\":\"0x8e5b8f9ac4629eac34ddf8545c91132d5063cdf221f262af4617c24af45c6f32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c32f488ba184d596578be8b52443d3cfe26ca3588a2f96d6006f156761a10c\",\"dweb:/ipfs/QmYMwT5KJ48zLj1HJZbAPYqMnD8LrMFRQA3ugUnoH44ops\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDT.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/USDT.sol\":{\"keccak256\":\"0x8e5b8f9ac4629eac34ddf8545c91132d5063cdf221f262af4617c24af45c6f32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c32f488ba184d596578be8b52443d3cfe26ca3588a2f96d6006f156761a10c\",\"dweb:/ipfs/QmYMwT5KJ48zLj1HJZbAPYqMnD8LrMFRQA3ugUnoH44ops\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDT.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/USDT.sol\":{\"keccak256\":\"0x8e5b8f9ac4629eac34ddf8545c91132d5063cdf221f262af4617c24af45c6f32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c32f488ba184d596578be8b52443d3cfe26ca3588a2f96d6006f156761a10c\",\"dweb:/ipfs/QmYMwT5KJ48zLj1HJZbAPYqMnD8LrMFRQA3ugUnoH44ops\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Initializable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/USDT.sol\":2935:4292  contract Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/USDT.sol\":2935:4292  contract Initializable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206a68cdab8f8e56219a72030c50ca62aa4a92b19f5661bd0e81cf7ca96ede8b9864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212206a68cdab8f8e56219a72030c50ca62aa4a92b19f5661bd0e81cf7ca96ede8b9864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x68CDAB8F8E56219A72030C POP 0xCA PUSH3 0xAA4A92 0xB1 SWAP16 JUMP PUSH2 0xBD0E DUP2 0xCF PUSH29 0xA96EDE8B9864736F6C634300060C003300000000000000000000000000 ",
							"sourceMap": "2935:1357:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212206a68cdab8f8e56219a72030c50ca62aa4a92b19f5661bd0e81cf7ca96ede8b9864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x68CDAB8F8E56219A72030C POP 0xCA PUSH3 0xAA4A92 0xB1 SWAP16 JUMP PUSH2 0xBD0E DUP2 0xCF PUSH29 0xA96EDE8B9864736F6C634300060C003300000000000000000000000000 ",
							"sourceMap": "2935:1357:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"isConstructor()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a68cdab8f8e56219a72030c50ca62aa4a92b19f5661bd0e81cf7ca96ede8b9864736f6c634300060c0033",
									".code": [
										{
											"begin": 2935,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2935,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 4292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 4292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 4292,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDT.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/USDT.sol\":{\"keccak256\":\"0x8e5b8f9ac4629eac34ddf8545c91132d5063cdf221f262af4617c24af45c6f32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c32f488ba184d596578be8b52443d3cfe26ca3588a2f96d6006f156761a10c\",\"dweb:/ipfs/QmYMwT5KJ48zLj1HJZbAPYqMnD8LrMFRQA3ugUnoH44ops\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 98,
								"contract": "contracts/USDT.sol:Initializable",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 101,
								"contract": "contracts/USDT.sol:Initializable",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 166,
								"contract": "contracts/USDT.sol:Initializable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"USDT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"initialize()": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer} Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/USDT.sol\":4701:16479  contract USDT is Initializable,Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/USDT.sol\":4701:16479  contract USDT is Initializable,Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/USDT.sol\":5453:5551  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_20:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_20)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":7870:8067  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":6541:6647  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":8629:8915  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":6390:6481  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":9310:9544  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":6836:6972  function mint(address _account,uint _amount)public virtual returns (bool) {... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":6705:6830  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":5291:5388  function initialize() public initializer{... */\n    tag_11:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/USDT.sol\":5664:5766  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_47:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_49\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_47)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_50\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_50:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":10031:10464  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_13:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":7166:7355  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_14:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":7413:7562  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_15:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/USDT.sol\":5453:5551  function name() public view virtual override returns (string memory) {... */\n    tag_19:\n        /* \"contracts/USDT.sol\":5507:5520  string memory */\n      0x60\n        /* \"contracts/USDT.sol\":5539:5544  _name */\n      0x36\n        /* \"contracts/USDT.sol\":5532:5544  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":5453:5551  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/USDT.sol\":7870:8067  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_26:\n        /* \"contracts/USDT.sol\":7953:7957  bool */\n      0x00\n        /* \"contracts/USDT.sol\":7969:7982  address owner */\n      dup1\n        /* \"contracts/USDT.sol\":7985:7997  _msgSender() */\n      tag_65\n        /* \"contracts/USDT.sol\":7985:7995  _msgSender */\n      tag_66\n        /* \"contracts/USDT.sol\":7985:7997  _msgSender() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/USDT.sol\":7969:7997  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":8007:8039  _approve(owner, spender, amount) */\n      tag_67\n        /* \"contracts/USDT.sol\":8016:8021  owner */\n      dup2\n        /* \"contracts/USDT.sol\":8023:8030  spender */\n      dup6\n        /* \"contracts/USDT.sol\":8032:8038  amount */\n      dup6\n        /* \"contracts/USDT.sol\":8007:8015  _approve */\n      tag_68\n        /* \"contracts/USDT.sol\":8007:8039  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/USDT.sol\":8056:8060  true */\n      0x01\n        /* \"contracts/USDT.sol\":8049:8060  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/USDT.sol\":7870:8067  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":6541:6647  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_28:\n        /* \"contracts/USDT.sol\":6602:6609  uint256 */\n      0x00\n        /* \"contracts/USDT.sol\":6628:6640  _totalSupply */\n      sload(0x35)\n        /* \"contracts/USDT.sol\":6621:6640  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":6541:6647  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/USDT.sol\":8629:8915  function transferFrom(... */\n    tag_31:\n        /* \"contracts/USDT.sol\":8756:8760  bool */\n      0x00\n        /* \"contracts/USDT.sol\":8772:8787  address spender */\n      dup1\n        /* \"contracts/USDT.sol\":8790:8802  _msgSender() */\n      tag_71\n        /* \"contracts/USDT.sol\":8790:8800  _msgSender */\n      tag_66\n        /* \"contracts/USDT.sol\":8790:8802  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/USDT.sol\":8772:8802  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":8812:8850  _spendAllowance(from, spender, amount) */\n      tag_72\n        /* \"contracts/USDT.sol\":8828:8832  from */\n      dup6\n        /* \"contracts/USDT.sol\":8834:8841  spender */\n      dup3\n        /* \"contracts/USDT.sol\":8843:8849  amount */\n      dup6\n        /* \"contracts/USDT.sol\":8812:8827  _spendAllowance */\n      tag_73\n        /* \"contracts/USDT.sol\":8812:8850  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/USDT.sol\":8860:8887  _transfer(from, to, amount) */\n      tag_74\n        /* \"contracts/USDT.sol\":8870:8874  from */\n      dup6\n        /* \"contracts/USDT.sol\":8876:8878  to */\n      dup6\n        /* \"contracts/USDT.sol\":8880:8886  amount */\n      dup6\n        /* \"contracts/USDT.sol\":8860:8869  _transfer */\n      tag_75\n        /* \"contracts/USDT.sol\":8860:8887  _transfer(from, to, amount) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/USDT.sol\":8904:8908  true */\n      0x01\n        /* \"contracts/USDT.sol\":8897:8908  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/USDT.sol\":8629:8915  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":6390:6481  function decimals() public view virtual override returns (uint8) {... */\n    tag_33:\n        /* \"contracts/USDT.sol\":6448:6453  uint8 */\n      0x00\n        /* \"contracts/USDT.sol\":6472:6474  18 */\n      0x12\n        /* \"contracts/USDT.sol\":6465:6474  return 18 */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":6390:6481  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/USDT.sol\":9310:9544  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_36:\n        /* \"contracts/USDT.sol\":9398:9402  bool */\n      0x00\n        /* \"contracts/USDT.sol\":9414:9427  address owner */\n      dup1\n        /* \"contracts/USDT.sol\":9430:9442  _msgSender() */\n      tag_78\n        /* \"contracts/USDT.sol\":9430:9440  _msgSender */\n      tag_66\n        /* \"contracts/USDT.sol\":9430:9442  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"contracts/USDT.sol\":9414:9442  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":9452:9516  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_79\n        /* \"contracts/USDT.sol\":9461:9466  owner */\n      dup2\n        /* \"contracts/USDT.sol\":9468:9475  spender */\n      dup6\n        /* \"contracts/USDT.sol\":9505:9515  addedValue */\n      dup6\n        /* \"contracts/USDT.sol\":9477:9502  allowance(owner, spender) */\n      tag_80\n        /* \"contracts/USDT.sol\":9487:9492  owner */\n      dup6\n        /* \"contracts/USDT.sol\":9494:9501  spender */\n      dup10\n        /* \"contracts/USDT.sol\":9477:9486  allowance */\n      tag_59\n        /* \"contracts/USDT.sol\":9477:9502  allowance(owner, spender) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/USDT.sol\":9477:9515  allowance(owner, spender) + addedValue */\n      add\n        /* \"contracts/USDT.sol\":9452:9460  _approve */\n      tag_68\n        /* \"contracts/USDT.sol\":9452:9516  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_79:\n        /* \"contracts/USDT.sol\":9533:9537  true */\n      0x01\n        /* \"contracts/USDT.sol\":9526:9537  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/USDT.sol\":9310:9544  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":6836:6972  function mint(address _account,uint _amount)public virtual returns (bool) {... */\n    tag_39:\n        /* \"contracts/USDT.sol\":6904:6908  bool */\n      0x00\n        /* \"contracts/USDT.sol\":6920:6944  _mint(_account, _amount) */\n      tag_82\n        /* \"contracts/USDT.sol\":6926:6934  _account */\n      dup4\n        /* \"contracts/USDT.sol\":6936:6943  _amount */\n      dup4\n        /* \"contracts/USDT.sol\":6920:6925  _mint */\n      tag_83\n        /* \"contracts/USDT.sol\":6920:6944  _mint(_account, _amount) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/USDT.sol\":6961:6965  true */\n      0x01\n        /* \"contracts/USDT.sol\":6954:6965  return true */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":6836:6972  function mint(address _account,uint _amount)public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":6705:6830  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_42:\n        /* \"contracts/USDT.sol\":6779:6786  uint256 */\n      0x00\n        /* \"contracts/USDT.sol\":6805:6814  _balances */\n      0x33\n        /* \"contracts/USDT.sol\":6805:6823  _balances[account] */\n      0x00\n        /* \"contracts/USDT.sol\":6815:6822  account */\n      dup4\n        /* \"contracts/USDT.sol\":6805:6823  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/USDT.sol\":6798:6823  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":6705:6830  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":5291:5388  function initialize() public initializer{... */\n    tag_44:\n        /* \"contracts/USDT.sol\":3302:3314  initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/USDT.sol\":3302:3333  initializing || isConstructor() */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"contracts/USDT.sol\":3318:3333  isConstructor() */\n      tag_87\n        /* \"contracts/USDT.sol\":3318:3331  isConstructor */\n      tag_88\n        /* \"contracts/USDT.sol\":3318:3333  isConstructor() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/USDT.sol\":3302:3333  initializing || isConstructor() */\n    tag_86:\n        /* \"contracts/USDT.sol\":3302:3349  initializing || isConstructor() || !initialized */\n      dup1\n      tag_89\n      jumpi\n      pop\n        /* \"contracts/USDT.sol\":3338:3349  initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/USDT.sol\":3337:3349  !initialized */\n      iszero\n        /* \"contracts/USDT.sol\":3302:3349  initializing || isConstructor() || !initialized */\n    tag_89:\n        /* \"contracts/USDT.sol\":3294:3400  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/USDT.sol\":3407:3426  bool isTopLevelCall */\n      0x00\n        /* \"contracts/USDT.sol\":3430:3442  initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/USDT.sol\":3429:3442  !initializing */\n      iszero\n        /* \"contracts/USDT.sol\":3407:3442  bool isTopLevelCall = !initializing */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":3452:3466  isTopLevelCall */\n      dup1\n        /* \"contracts/USDT.sol\":3448:3528  if (isTopLevelCall) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/USDT.sol\":3491:3495  true */\n      0x01\n        /* \"contracts/USDT.sol\":3476:3488  initializing */\n      0x00\n      0x01\n        /* \"contracts/USDT.sol\":3476:3495  initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/USDT.sol\":3517:3521  true */\n      0x01\n        /* \"contracts/USDT.sol\":3503:3514  initialized */\n      0x00\n      dup1\n        /* \"contracts/USDT.sol\":3503:3521  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/USDT.sol\":3448:3528  if (isTopLevelCall) {... */\n    tag_91:\n        /* \"contracts/USDT.sol\":5341:5355  _name = \"usdt\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x7573647400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/USDT.sol\":5341:5346  _name */\n      0x36\n        /* \"contracts/USDT.sol\":5341:5355  _name = \"usdt\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_93\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      pop\n        /* \"contracts/USDT.sol\":5365:5381  _symbol = \"USDT\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x5553445400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/USDT.sol\":5365:5372  _symbol */\n      0x37\n        /* \"contracts/USDT.sol\":5365:5381  _symbol = \"USDT\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_95\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      pop\n        /* \"contracts/USDT.sol\":3546:3560  isTopLevelCall */\n      dup1\n        /* \"contracts/USDT.sol\":3542:3597  if (isTopLevelCall) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"contracts/USDT.sol\":3585:3590  false */\n      0x00\n        /* \"contracts/USDT.sol\":3570:3582  initializing */\n      dup1\n      0x01\n        /* \"contracts/USDT.sol\":3570:3590  initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/USDT.sol\":3542:3597  if (isTopLevelCall) {... */\n    tag_96:\n        /* \"contracts/USDT.sol\":5291:5388  function initialize() public initializer{... */\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":5664:5766  function symbol() public view virtual override returns (string memory) {... */\n    tag_46:\n        /* \"contracts/USDT.sol\":5720:5733  string memory */\n      0x60\n        /* \"contracts/USDT.sol\":5752:5759  _symbol */\n      0x37\n        /* \"contracts/USDT.sol\":5745:5759  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":5664:5766  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/USDT.sol\":10031:10464  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_53:\n        /* \"contracts/USDT.sol\":10124:10128  bool */\n      0x00\n        /* \"contracts/USDT.sol\":10140:10153  address owner */\n      dup1\n        /* \"contracts/USDT.sol\":10156:10168  _msgSender() */\n      tag_102\n        /* \"contracts/USDT.sol\":10156:10166  _msgSender */\n      tag_66\n        /* \"contracts/USDT.sol\":10156:10168  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/USDT.sol\":10140:10168  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":10178:10202  uint256 currentAllowance */\n      0x00\n        /* \"contracts/USDT.sol\":10205:10230  allowance(owner, spender) */\n      tag_103\n        /* \"contracts/USDT.sol\":10215:10220  owner */\n      dup3\n        /* \"contracts/USDT.sol\":10222:10229  spender */\n      dup7\n        /* \"contracts/USDT.sol\":10205:10214  allowance */\n      tag_59\n        /* \"contracts/USDT.sol\":10205:10230  allowance(owner, spender) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/USDT.sol\":10178:10230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":10268:10283  subtractedValue */\n      dup4\n        /* \"contracts/USDT.sol\":10248:10264  currentAllowance */\n      dup2\n        /* \"contracts/USDT.sol\":10248:10283  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/USDT.sol\":10240:10325  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/USDT.sol\":10362:10422  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_105\n        /* \"contracts/USDT.sol\":10371:10376  owner */\n      dup3\n        /* \"contracts/USDT.sol\":10378:10385  spender */\n      dup7\n        /* \"contracts/USDT.sol\":10406:10421  subtractedValue */\n      dup7\n        /* \"contracts/USDT.sol\":10387:10403  currentAllowance */\n      dup5\n        /* \"contracts/USDT.sol\":10387:10421  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/USDT.sol\":10362:10370  _approve */\n      tag_68\n        /* \"contracts/USDT.sol\":10362:10422  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/USDT.sol\":10453:10457  true */\n      0x01\n        /* \"contracts/USDT.sol\":10446:10457  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/USDT.sol\":10031:10464  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":7166:7355  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"contracts/USDT.sol\":7245:7249  bool */\n      0x00\n        /* \"contracts/USDT.sol\":7261:7274  address owner */\n      dup1\n        /* \"contracts/USDT.sol\":7277:7289  _msgSender() */\n      tag_107\n        /* \"contracts/USDT.sol\":7277:7287  _msgSender */\n      tag_66\n        /* \"contracts/USDT.sol\":7277:7289  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"contracts/USDT.sol\":7261:7289  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":7299:7327  _transfer(owner, to, amount) */\n      tag_108\n        /* \"contracts/USDT.sol\":7309:7314  owner */\n      dup2\n        /* \"contracts/USDT.sol\":7316:7318  to */\n      dup6\n        /* \"contracts/USDT.sol\":7320:7326  amount */\n      dup6\n        /* \"contracts/USDT.sol\":7299:7308  _transfer */\n      tag_75\n        /* \"contracts/USDT.sol\":7299:7327  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/USDT.sol\":7344:7348  true */\n      0x01\n        /* \"contracts/USDT.sol\":7337:7348  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/USDT.sol\":7166:7355  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":7413:7562  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_59:\n        /* \"contracts/USDT.sol\":7502:7509  uint256 */\n      0x00\n        /* \"contracts/USDT.sol\":7528:7539  _allowances */\n      0x34\n        /* \"contracts/USDT.sol\":7528:7546  _allowances[owner] */\n      0x00\n        /* \"contracts/USDT.sol\":7540:7545  owner */\n      dup5\n        /* \"contracts/USDT.sol\":7528:7546  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/USDT.sol\":7528:7555  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/USDT.sol\":7547:7554  spender */\n      dup4\n        /* \"contracts/USDT.sol\":7528:7555  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/USDT.sol\":7521:7555  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":7413:7562  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":2730:2826  function _msgSender() internal view virtual returns (address) {... */\n    tag_66:\n        /* \"contracts/USDT.sol\":2783:2790  address */\n      0x00\n        /* \"contracts/USDT.sol\":2809:2819  msg.sender */\n      caller\n        /* \"contracts/USDT.sol\":2802:2819  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":2730:2826  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/USDT.sol\":13966:14336  function _approve(... */\n    tag_68:\n        /* \"contracts/USDT.sol\":14114:14115  0 */\n      0x00\n        /* \"contracts/USDT.sol\":14097:14116  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/USDT.sol\":14097:14102  owner */\n      dup4\n        /* \"contracts/USDT.sol\":14097:14116  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/USDT.sol\":14089:14157  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/USDT.sol\":14194:14195  0 */\n      0x00\n        /* \"contracts/USDT.sol\":14175:14196  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/USDT.sol\":14175:14182  spender */\n      dup3\n        /* \"contracts/USDT.sol\":14175:14196  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/USDT.sol\":14167:14235  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/USDT.sol\":14276:14282  amount */\n      dup1\n        /* \"contracts/USDT.sol\":14246:14257  _allowances */\n      0x34\n        /* \"contracts/USDT.sol\":14246:14264  _allowances[owner] */\n      0x00\n        /* \"contracts/USDT.sol\":14258:14263  owner */\n      dup6\n        /* \"contracts/USDT.sol\":14246:14264  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/USDT.sol\":14246:14273  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/USDT.sol\":14265:14272  spender */\n      dup5\n        /* \"contracts/USDT.sol\":14246:14273  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/USDT.sol\":14246:14282  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/USDT.sol\":14313:14320  spender */\n      dup2\n        /* \"contracts/USDT.sol\":14297:14329  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/USDT.sol\":14306:14311  owner */\n      dup4\n        /* \"contracts/USDT.sol\":14297:14329  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/USDT.sol\":14322:14328  amount */\n      dup4\n        /* \"contracts/USDT.sol\":14297:14329  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/USDT.sol\":13966:14336  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":14617:15064  function _spendAllowance(... */\n    tag_73:\n        /* \"contracts/USDT.sol\":14747:14771  uint256 currentAllowance */\n      0x00\n        /* \"contracts/USDT.sol\":14774:14799  allowance(owner, spender) */\n      tag_115\n        /* \"contracts/USDT.sol\":14784:14789  owner */\n      dup5\n        /* \"contracts/USDT.sol\":14791:14798  spender */\n      dup5\n        /* \"contracts/USDT.sol\":14774:14783  allowance */\n      tag_59\n        /* \"contracts/USDT.sol\":14774:14799  allowance(owner, spender) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/USDT.sol\":14747:14799  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":14833:14850  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/USDT.sol\":14813:14829  currentAllowance */\n      dup2\n        /* \"contracts/USDT.sol\":14813:14850  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/USDT.sol\":14809:15058  if (currentAllowance != type(uint256).max) {... */\n      tag_116\n      jumpi\n        /* \"contracts/USDT.sol\":14894:14900  amount */\n      dup2\n        /* \"contracts/USDT.sol\":14874:14890  currentAllowance */\n      dup2\n        /* \"contracts/USDT.sol\":14874:14900  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/USDT.sol\":14866:14934  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/USDT.sol\":14979:15030  _approve(owner, spender, currentAllowance - amount) */\n      tag_118\n        /* \"contracts/USDT.sol\":14988:14993  owner */\n      dup5\n        /* \"contracts/USDT.sol\":14995:15002  spender */\n      dup5\n        /* \"contracts/USDT.sol\":15023:15029  amount */\n      dup5\n        /* \"contracts/USDT.sol\":15004:15020  currentAllowance */\n      dup5\n        /* \"contracts/USDT.sol\":15004:15029  currentAllowance - amount */\n      sub\n        /* \"contracts/USDT.sol\":14979:14987  _approve */\n      tag_68\n        /* \"contracts/USDT.sol\":14979:15030  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/USDT.sol\":14809:15058  if (currentAllowance != type(uint256).max) {... */\n    tag_116:\n        /* \"contracts/USDT.sol\":14617:15064  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":10918:11741  function _transfer(... */\n    tag_75:\n        /* \"contracts/USDT.sol\":11060:11061  0 */\n      0x00\n        /* \"contracts/USDT.sol\":11044:11062  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/USDT.sol\":11044:11048  from */\n      dup4\n        /* \"contracts/USDT.sol\":11044:11062  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/USDT.sol\":11036:11104  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/USDT.sol\":11136:11137  0 */\n      0x00\n        /* \"contracts/USDT.sol\":11122:11138  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/USDT.sol\":11122:11124  to */\n      dup3\n        /* \"contracts/USDT.sol\":11122:11138  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/USDT.sol\":11114:11178  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/USDT.sol\":11189:11227  _beforeTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"contracts/USDT.sol\":11210:11214  from */\n      dup4\n        /* \"contracts/USDT.sol\":11216:11218  to */\n      dup4\n        /* \"contracts/USDT.sol\":11220:11226  amount */\n      dup4\n        /* \"contracts/USDT.sol\":11189:11209  _beforeTokenTransfer */\n      tag_123\n        /* \"contracts/USDT.sol\":11189:11227  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/USDT.sol\":11238:11257  uint256 fromBalance */\n      0x00\n        /* \"contracts/USDT.sol\":11260:11269  _balances */\n      0x33\n        /* \"contracts/USDT.sol\":11260:11275  _balances[from] */\n      0x00\n        /* \"contracts/USDT.sol\":11270:11274  from */\n      dup6\n        /* \"contracts/USDT.sol\":11260:11275  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/USDT.sol\":11238:11275  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":11308:11314  amount */\n      dup2\n        /* \"contracts/USDT.sol\":11293:11304  fromBalance */\n      dup2\n        /* \"contracts/USDT.sol\":11293:11314  fromBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/USDT.sol\":11285:11357  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/USDT.sol\":11426:11432  amount */\n      dup2\n        /* \"contracts/USDT.sol\":11412:11423  fromBalance */\n      dup2\n        /* \"contracts/USDT.sol\":11412:11432  fromBalance - amount */\n      sub\n        /* \"contracts/USDT.sol\":11394:11403  _balances */\n      0x33\n        /* \"contracts/USDT.sol\":11394:11409  _balances[from] */\n      0x00\n        /* \"contracts/USDT.sol\":11404:11408  from */\n      dup7\n        /* \"contracts/USDT.sol\":11394:11409  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/USDT.sol\":11394:11432  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/USDT.sol\":11626:11632  amount */\n      dup2\n        /* \"contracts/USDT.sol\":11609:11618  _balances */\n      0x33\n        /* \"contracts/USDT.sol\":11609:11622  _balances[to] */\n      0x00\n        /* \"contracts/USDT.sol\":11619:11621  to */\n      dup6\n        /* \"contracts/USDT.sol\":11609:11622  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/USDT.sol\":11609:11632  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/USDT.sol\":11675:11677  to */\n      dup3\n        /* \"contracts/USDT.sol\":11660:11686  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/USDT.sol\":11669:11673  from */\n      dup5\n        /* \"contracts/USDT.sol\":11660:11686  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/USDT.sol\":11679:11685  amount */\n      dup5\n        /* \"contracts/USDT.sol\":11660:11686  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/USDT.sol\":11697:11734  _afterTokenTransfer(from, to, amount) */\n      tag_125\n        /* \"contracts/USDT.sol\":11717:11721  from */\n      dup5\n        /* \"contracts/USDT.sol\":11723:11725  to */\n      dup5\n        /* \"contracts/USDT.sol\":11727:11733  amount */\n      dup5\n        /* \"contracts/USDT.sol\":11697:11716  _afterTokenTransfer */\n      tag_126\n        /* \"contracts/USDT.sol\":11697:11734  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/USDT.sol\":10918:11741  function _transfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":12017:12558  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_83:\n        /* \"contracts/USDT.sol\":12119:12120  0 */\n      0x00\n        /* \"contracts/USDT.sol\":12100:12121  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/USDT.sol\":12100:12107  account */\n      dup3\n        /* \"contracts/USDT.sol\":12100:12121  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/USDT.sol\":12092:12157  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/USDT.sol\":12168:12217  _beforeTokenTransfer(address(0), account, amount) */\n      tag_129\n        /* \"contracts/USDT.sol\":12197:12198  0 */\n      0x00\n        /* \"contracts/USDT.sol\":12201:12208  account */\n      dup4\n        /* \"contracts/USDT.sol\":12210:12216  amount */\n      dup4\n        /* \"contracts/USDT.sol\":12168:12188  _beforeTokenTransfer */\n      tag_123\n        /* \"contracts/USDT.sol\":12168:12217  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/USDT.sol\":12244:12250  amount */\n      dup1\n        /* \"contracts/USDT.sol\":12228:12240  _totalSupply */\n      0x35\n      0x00\n        /* \"contracts/USDT.sol\":12228:12250  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/USDT.sol\":12421:12427  amount */\n      dup1\n        /* \"contracts/USDT.sol\":12399:12408  _balances */\n      0x33\n        /* \"contracts/USDT.sol\":12399:12417  _balances[account] */\n      0x00\n        /* \"contracts/USDT.sol\":12409:12416  account */\n      dup5\n        /* \"contracts/USDT.sol\":12399:12417  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/USDT.sol\":12399:12427  _balances[account] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/USDT.sol\":12476:12483  account */\n      dup2\n        /* \"contracts/USDT.sol\":12455:12492  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/USDT.sol\":12472:12473  0 */\n      0x00\n        /* \"contracts/USDT.sol\":12455:12492  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/USDT.sol\":12485:12491  amount */\n      dup4\n        /* \"contracts/USDT.sol\":12455:12492  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/USDT.sol\":12503:12551  _afterTokenTransfer(address(0), account, amount) */\n      tag_130\n        /* \"contracts/USDT.sol\":12531:12532  0 */\n      0x00\n        /* \"contracts/USDT.sol\":12535:12542  account */\n      dup4\n        /* \"contracts/USDT.sol\":12544:12550  amount */\n      dup4\n        /* \"contracts/USDT.sol\":12503:12522  _afterTokenTransfer */\n      tag_126\n        /* \"contracts/USDT.sol\":12503:12551  _afterTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/USDT.sol\":12017:12558  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":3687:4185  function isConstructor() private view returns (bool) {... */\n    tag_88:\n        /* \"contracts/USDT.sol\":3734:3738  bool */\n      0x00\n        /* \"contracts/USDT.sol\":4075:4087  address self */\n      dup1\n        /* \"contracts/USDT.sol\":4098:4102  this */\n      address\n        /* \"contracts/USDT.sol\":4075:4103  address self = address(this) */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":4109:4119  uint256 cs */\n      0x00\n        /* \"contracts/USDT.sol\":4154:4158  self */\n      dup2\n        /* \"contracts/USDT.sol\":4142:4159  extcodesize(self) */\n      extcodesize\n        /* \"contracts/USDT.sol\":4136:4159  cs := extcodesize(self) */\n      swap1\n      pop\n        /* \"contracts/USDT.sol\":4179:4180  0 */\n      0x00\n        /* \"contracts/USDT.sol\":4173:4175  cs */\n      dup2\n        /* \"contracts/USDT.sol\":4173:4180  cs == 0 */\n      eq\n        /* \"contracts/USDT.sol\":4166:4180  return cs == 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/USDT.sol\":3687:4185  function isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/USDT.sol\":15648:15769  function _beforeTokenTransfer(... */\n    tag_123:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/USDT.sol\":16357:16477  function _afterTokenTransfer(... */\n    tag_126:\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_94:\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_135\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_134)\n    tag_135:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_134\n      jumpi\n      swap2\n      dup3\n      add\n    tag_136:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_137\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_136)\n    tag_137:\n    tag_134:\n      pop\n      swap1\n      pop\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      pop\n      swap1\n      jump\t// out\n    tag_139:\n    tag_140:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_140)\n    tag_141:\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4 436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122015f579089681bf012c198905ccb37b2d52297dd22772a6cda47ca728e5b5f60164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611366806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b41146103a8578063a457c2d71461042b578063a9059cbb1461048f578063dd62ed3e146104f3576100cf565b806340c10f19146102e257806370a08231146103465780638129fc1c1461039e576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bb57806323b872dd146101d9578063313ce5671461025d578063395093511461027e575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061060d565b60405180821515815260200191505060405180910390f35b6101c3610630565b6040518082815260200191505060405180910390f35b610245600480360360608110156101ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061063a565b60405180821515815260200191505060405180910390f35b610265610669565b604051808260ff16815260200191505060405180910390f35b6102ca6004803603604081101561029457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610672565b60405180821515815260200191505060405180910390f35b61032e600480360360408110156102f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106a0565b60405180821515815260200191505060405180910390f35b6103886004803603602081101561035c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106b6565b6040518082815260200191505060405180910390f35b6103a66106ff565b005b6103b0610895565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103f05780820151818401526020810190506103d5565b50505050905090810190601f16801561041d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104776004803603604081101561044157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610937565b60405180821515815260200191505060405180910390f35b6104db600480360360408110156104a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109c4565b60405180821515815260200191505060405180910390f35b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e7565b6040518082815260200191505060405180910390f35b606060368054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b5050505050905090565b600080610618610a6e565b9050610625818585610a76565b600191505092915050565b6000603554905090565b600080610645610a6e565b9050610652858285610c6d565b61065d858585610d2c565b60019150509392505050565b60006012905090565b60008061067d610a6e565b905061069581858561068f85896109e7565b01610a76565b600191505092915050565b60006106ac8383610fe9565b6001905092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff168061071e575061071d61116b565b5b80610734575060008054906101000a900460ff16155b610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611295602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156107d9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6040518060400160405280600481526020017f75736474000000000000000000000000000000000000000000000000000000008152506036908051906020019061082492919061118c565b506040518060400160405280600481526020017f55534454000000000000000000000000000000000000000000000000000000008152506037908051906020019061087092919061118c565b5080156108925760008060016101000a81548160ff0219169083151502179055505b50565b606060378054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561092d5780601f106109025761010080835404028352916020019161092d565b820191906000526020600020905b81548152906001019060200180831161091057829003601f168201915b5050505050905090565b600080610942610a6e565b9050600061095082866109e7565b9050838110156109ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061130c6025913960400191505060405180910390fd5b6109b88286868403610a76565b60019250505092915050565b6000806109cf610a6e565b90506109dc818585610d2c565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610afc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112e86024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061124d6022913960400191505060405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000610c7984846109e7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d265781811015610d18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000081525060200191505060405180910390fd5b610d258484848403610a76565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610db2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806112c36025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061122a6023913960400191505060405180910390fd5b610e43838383611182565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ee0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061126f6026913960400191505060405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3610fe3848484611187565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561108c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61109860008383611182565b8060356000828254019250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a361116760008383611187565b5050565b6000803090506000813b9050600081149250505090565b505050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106111cd57805160ff19168380011785556111fb565b828001600101855582156111fb579182015b828111156111fa5782518255916020019190600101906111df565b5b509050611208919061120c565b5090565b5b8082111561122557600081600090555060010161120d565b509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122015f579089681bf012c198905ccb37b2d52297dd22772a6cda47ca728e5b5f60164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1366 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x39E JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x27E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x672 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH2 0x6FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x41D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x477 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x603 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x603 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x618 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x625 DUP2 DUP6 DUP6 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x645 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x652 DUP6 DUP3 DUP6 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x65D DUP6 DUP6 DUP6 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x67D PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x695 DUP2 DUP6 DUP6 PUSH2 0x68F DUP6 DUP10 PUSH2 0x9E7 JUMP JUMPDEST ADD PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AC DUP4 DUP4 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x71E JUMPI POP PUSH2 0x71D PUSH2 0x116B JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x734 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1295 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7573647400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x36 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x824 SWAP3 SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x37 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x870 SWAP3 SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x92D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x902 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x910 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x942 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x950 DUP3 DUP7 PUSH2 0x9E7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x130C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9CF PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x9DC DUP2 DUP6 DUP6 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12E8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x124D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC79 DUP5 DUP5 PUSH2 0x9E7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD26 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD25 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xA76 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12C3 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x122A PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE43 DUP4 DUP4 DUP4 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x126F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFE3 DUP5 DUP5 DUP5 PUSH2 0x1187 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1098 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1182 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1167 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1187 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x11CD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x11FB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x11FB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x11FA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x11DF JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1208 SWAP2 SWAP1 PUSH2 0x120C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1225 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x120D JUMP JUMPDEST POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E6365436F6E74 PUSH19 0x61637420696E7374616E63652068617320616C PUSH19 0x65616479206265656E20696E697469616C697A PUSH6 0x644552433230 GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122015F5 PUSH26 0x89681BF012C198905CCB37B2D52297DD22772A6CDA47CA728E5 0xB5 0xF6 ADD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4701:11778:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b41146103a8578063a457c2d71461042b578063a9059cbb1461048f578063dd62ed3e146104f3576100cf565b806340c10f19146102e257806370a08231146103465780638129fc1c1461039e576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bb57806323b872dd146101d9578063313ce5671461025d578063395093511461027e575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061060d565b60405180821515815260200191505060405180910390f35b6101c3610630565b6040518082815260200191505060405180910390f35b610245600480360360608110156101ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061063a565b60405180821515815260200191505060405180910390f35b610265610669565b604051808260ff16815260200191505060405180910390f35b6102ca6004803603604081101561029457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610672565b60405180821515815260200191505060405180910390f35b61032e600480360360408110156102f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106a0565b60405180821515815260200191505060405180910390f35b6103886004803603602081101561035c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106b6565b6040518082815260200191505060405180910390f35b6103a66106ff565b005b6103b0610895565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103f05780820151818401526020810190506103d5565b50505050905090810190601f16801561041d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104776004803603604081101561044157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610937565b60405180821515815260200191505060405180910390f35b6104db600480360360408110156104a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109c4565b60405180821515815260200191505060405180910390f35b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e7565b6040518082815260200191505060405180910390f35b606060368054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b5050505050905090565b600080610618610a6e565b9050610625818585610a76565b600191505092915050565b6000603554905090565b600080610645610a6e565b9050610652858285610c6d565b61065d858585610d2c565b60019150509392505050565b60006012905090565b60008061067d610a6e565b905061069581858561068f85896109e7565b01610a76565b600191505092915050565b60006106ac8383610fe9565b6001905092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff168061071e575061071d61116b565b5b80610734575060008054906101000a900460ff16155b610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611295602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156107d9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6040518060400160405280600481526020017f75736474000000000000000000000000000000000000000000000000000000008152506036908051906020019061082492919061118c565b506040518060400160405280600481526020017f55534454000000000000000000000000000000000000000000000000000000008152506037908051906020019061087092919061118c565b5080156108925760008060016101000a81548160ff0219169083151502179055505b50565b606060378054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561092d5780601f106109025761010080835404028352916020019161092d565b820191906000526020600020905b81548152906001019060200180831161091057829003601f168201915b5050505050905090565b600080610942610a6e565b9050600061095082866109e7565b9050838110156109ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061130c6025913960400191505060405180910390fd5b6109b88286868403610a76565b60019250505092915050565b6000806109cf610a6e565b90506109dc818585610d2c565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610afc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112e86024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061124d6022913960400191505060405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000610c7984846109e7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d265781811015610d18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000081525060200191505060405180910390fd5b610d258484848403610a76565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610db2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806112c36025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061122a6023913960400191505060405180910390fd5b610e43838383611182565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ee0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061126f6026913960400191505060405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3610fe3848484611187565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561108c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61109860008383611182565b8060356000828254019250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a361116760008383611187565b5050565b6000803090506000813b9050600081149250505090565b505050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106111cd57805160ff19168380011785556111fb565b828001600101855582156111fb579182015b828111156111fa5782518255916020019190600101906111df565b5b509050611208919061120c565b5090565b5b8082111561122557600081600090555060010161120d565b509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122015f579089681bf012c198905ccb37b2d52297dd22772a6cda47ca728e5b5f60164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x39E JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x27E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x672 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH2 0x6FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x41D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x477 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x603 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x603 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x618 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x625 DUP2 DUP6 DUP6 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x645 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x652 DUP6 DUP3 DUP6 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x65D DUP6 DUP6 DUP6 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x67D PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x695 DUP2 DUP6 DUP6 PUSH2 0x68F DUP6 DUP10 PUSH2 0x9E7 JUMP JUMPDEST ADD PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AC DUP4 DUP4 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x71E JUMPI POP PUSH2 0x71D PUSH2 0x116B JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x734 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1295 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7573647400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x36 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x824 SWAP3 SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x37 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x870 SWAP3 SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x92D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x902 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x910 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x942 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x950 DUP3 DUP7 PUSH2 0x9E7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x130C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9CF PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x9DC DUP2 DUP6 DUP6 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12E8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x124D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC79 DUP5 DUP5 PUSH2 0x9E7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD26 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD25 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xA76 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12C3 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x122A PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE43 DUP4 DUP4 DUP4 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x126F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFE3 DUP5 DUP5 DUP5 PUSH2 0x1187 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1098 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1182 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1167 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1187 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x11CD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x11FB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x11FB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x11FA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x11DF JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1208 SWAP2 SWAP1 PUSH2 0x120C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1225 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x120D JUMP JUMPDEST POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E6365436F6E74 PUSH19 0x61637420696E7374616E63652068617320616C PUSH19 0x65616479206265656E20696E697469616C697A PUSH6 0x644552433230 GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122015F5 PUSH26 0x89681BF012C198905CCB37B2D52297DD22772A6CDA47CA728E5 0xB5 0xF6 ADD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4701:11778:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5453:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7870:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6541:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8629:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6390:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9310:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6836:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6705:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5291:97;;;:::i;:::-;;5664:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10031:433;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7166:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7413:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5453:98;5507:13;5539:5;5532:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5453:98;:::o;7870:197::-;7953:4;7969:13;7985:12;:10;:12::i;:::-;7969:28;;8007:32;8016:5;8023:7;8032:6;8007:8;:32::i;:::-;8056:4;8049:11;;;7870:197;;;;:::o;6541:106::-;6602:7;6628:12;;6621:19;;6541:106;:::o;8629:286::-;8756:4;8772:15;8790:12;:10;:12::i;:::-;8772:30;;8812:38;8828:4;8834:7;8843:6;8812:15;:38::i;:::-;8860:27;8870:4;8876:2;8880:6;8860:9;:27::i;:::-;8904:4;8897:11;;;8629:286;;;;;:::o;6390:91::-;6448:5;6472:2;6465:9;;6390:91;:::o;9310:234::-;9398:4;9414:13;9430:12;:10;:12::i;:::-;9414:28;;9452:64;9461:5;9468:7;9505:10;9477:25;9487:5;9494:7;9477:9;:25::i;:::-;:38;9452:8;:64::i;:::-;9533:4;9526:11;;;9310:234;;;;:::o;6836:136::-;6904:4;6920:24;6926:8;6936:7;6920:5;:24::i;:::-;6961:4;6954:11;;6836:136;;;;:::o;6705:125::-;6779:7;6805:9;:18;6815:7;6805:18;;;;;;;;;;;;;;;;6798:25;;6705:125;;;:::o;5291:97::-;3302:12;;;;;;;;;;;:31;;;;3318:15;:13;:15::i;:::-;3302:31;:47;;;;3338:11;;;;;;;;;;3337:12;3302:47;3294:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3407:19;3430:12;;;;;;;;;;;3429:13;3407:35;;3452:14;3448:80;;;3491:4;3476:12;;:19;;;;;;;;;;;;;;;;;;3517:4;3503:11;;:18;;;;;;;;;;;;;;;;;;3448:80;5341:14:::1;;;;;;;;;;;;;;;;::::0;:5:::1;:14;;;;;;;;;;;;:::i;:::-;;5365:16;;;;;;;;;;;;;;;;::::0;:7:::1;:16;;;;;;;;;;;;:::i;:::-;;3546:14:::0;3542:55;;;3585:5;3570:12;;:20;;;;;;;;;;;;;;;;;;3542:55;5291:97;:::o;5664:102::-;5720:13;5752:7;5745:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5664:102;:::o;10031:433::-;10124:4;10140:13;10156:12;:10;:12::i;:::-;10140:28;;10178:24;10205:25;10215:5;10222:7;10205:9;:25::i;:::-;10178:52;;10268:15;10248:16;:35;;10240:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10362:60;10371:5;10378:7;10406:15;10387:16;:34;10362:8;:60::i;:::-;10453:4;10446:11;;;;10031:433;;;;:::o;7166:189::-;7245:4;7261:13;7277:12;:10;:12::i;:::-;7261:28;;7299;7309:5;7316:2;7320:6;7299:9;:28::i;:::-;7344:4;7337:11;;;7166:189;;;;:::o;7413:149::-;7502:7;7528:11;:18;7540:5;7528:18;;;;;;;;;;;;;;;:27;7547:7;7528:27;;;;;;;;;;;;;;;;7521:34;;7413:149;;;;:::o;2730:96::-;2783:7;2809:10;2802:17;;2730:96;:::o;13966:370::-;14114:1;14097:19;;:5;:19;;;;14089:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14194:1;14175:21;;:7;:21;;;;14167:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14276:6;14246:11;:18;14258:5;14246:18;;;;;;;;;;;;;;;:27;14265:7;14246:27;;;;;;;;;;;;;;;:36;;;;14313:7;14297:32;;14306:5;14297:32;;;14322:6;14297:32;;;;;;;;;;;;;;;;;;13966:370;;;:::o;14617:447::-;14747:24;14774:25;14784:5;14791:7;14774:9;:25::i;:::-;14747:52;;14833:17;14813:16;:37;14809:249;;14894:6;14874:16;:26;;14866:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14979:51;14988:5;14995:7;15023:6;15004:16;:25;14979:8;:51::i;:::-;14809:249;14617:447;;;;:::o;10918:823::-;11060:1;11044:18;;:4;:18;;;;11036:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11136:1;11122:16;;:2;:16;;;;11114:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11189:38;11210:4;11216:2;11220:6;11189:20;:38::i;:::-;11238:19;11260:9;:15;11270:4;11260:15;;;;;;;;;;;;;;;;11238:37;;11308:6;11293:11;:21;;11285:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11426:6;11412:11;:20;11394:9;:15;11404:4;11394:15;;;;;;;;;;;;;;;:38;;;;11626:6;11609:9;:13;11619:2;11609:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;11675:2;11660:26;;11669:4;11660:26;;;11679:6;11660:26;;;;;;;;;;;;;;;;;;11697:37;11717:4;11723:2;11727:6;11697:19;:37::i;:::-;10918:823;;;;:::o;12017:541::-;12119:1;12100:21;;:7;:21;;;;12092:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12168:49;12197:1;12201:7;12210:6;12168:20;:49::i;:::-;12244:6;12228:12;;:22;;;;;;;;;;;12421:6;12399:9;:18;12409:7;12399:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;12476:7;12455:37;;12472:1;12455:37;;;12485:6;12455:37;;;;;;;;;;;;;;;;;;12503:48;12531:1;12535:7;12544:6;12503:19;:48::i;:::-;12017:541;;:::o;3687:498::-;3734:4;4075:12;4098:4;4075:28;;4109:10;4154:4;4142:17;4136:23;;4179:1;4173:2;:7;4166:14;;;;3687:498;:::o;15648:121::-;;;;:::o;16357:120::-;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "993200",
								"executionCost": "1034",
								"totalCost": "994234"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1241",
								"decimals()": "308",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize()": "infinite",
								"mint(address,uint256)": "44099",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4701,
									"end": 16479,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4701,
									"end": 16479,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015f579089681bf012c198905ccb37b2d52297dd22772a6cda47ca728e5b5f60164736f6c634300060c0033",
									".code": [
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "8129FC1C"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 16479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5539,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 7982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7985,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7985,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7985,
											"end": 7997,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7985,
											"end": 7997,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7985,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7969,
											"end": 7997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7969,
											"end": 7997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8007,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8007,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8007,
											"end": 8039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8007,
											"end": 8039,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8007,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8049,
											"end": 8060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8067,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6640,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6628,
											"end": 6640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6621,
											"end": 6640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6621,
											"end": 6640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6647,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8756,
											"end": 8760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8772,
											"end": 8787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8790,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8790,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8790,
											"end": 8802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8790,
											"end": 8802,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8790,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8772,
											"end": 8802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8772,
											"end": 8802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8812,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8828,
											"end": 8832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8834,
											"end": 8841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8843,
											"end": 8849,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8812,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8812,
											"end": 8850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8812,
											"end": 8850,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8812,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8870,
											"end": 8874,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8876,
											"end": 8878,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8880,
											"end": 8886,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8860,
											"end": 8887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8860,
											"end": 8887,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8860,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8904,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8897,
											"end": 8908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8897,
											"end": 8908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8897,
											"end": 8908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8915,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6472,
											"end": 6474,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6465,
											"end": 6474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6481,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9398,
											"end": 9402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9430,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9430,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9430,
											"end": 9442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9430,
											"end": 9442,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9430,
											"end": 9442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9461,
											"end": 9466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9515,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9487,
											"end": 9492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9494,
											"end": 9501,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9477,
											"end": 9502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9477,
											"end": 9502,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9477,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9452,
											"end": 9516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9452,
											"end": 9516,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9452,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9526,
											"end": 9537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9526,
											"end": 9537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9526,
											"end": 9537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9544,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6904,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6920,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6926,
											"end": 6934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6920,
											"end": 6944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6944,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6920,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6972,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6779,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6822,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6830,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3318,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3349,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH data",
											"source": 0,
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3448,
											"end": 3528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3448,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3448,
											"end": 3528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3517,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3503,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3448,
											"end": 3528,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3448,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "PUSH",
											"source": 0,
											"value": "7573647400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5346,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "5553445400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3542,
											"end": 3597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3597,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3542,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5720,
											"end": 5733,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5752,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5766,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10124,
											"end": 10128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10140,
											"end": 10153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10156,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10156,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10156,
											"end": 10168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10156,
											"end": 10168,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10156,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10178,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 10215,
											"end": 10220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10229,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10178,
											"end": 10230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10178,
											"end": 10230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10268,
											"end": 10283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10283,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH data",
											"source": 0,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10240,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10362,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10371,
											"end": 10376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10378,
											"end": 10385,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10406,
											"end": 10421,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10387,
											"end": 10403,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10387,
											"end": 10421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10362,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10362,
											"end": 10422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10362,
											"end": 10422,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10362,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10453,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10446,
											"end": 10457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10446,
											"end": 10457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10446,
											"end": 10457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10446,
											"end": 10457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10464,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7277,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7277,
											"end": 7289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7277,
											"end": 7289,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7277,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7299,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7309,
											"end": 7314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7299,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7299,
											"end": 7327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7299,
											"end": 7327,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7299,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7344,
											"end": 7348,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7337,
											"end": 7348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7502,
											"end": 7509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7539,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7547,
											"end": 7554,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7521,
											"end": 7555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7521,
											"end": 7555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7562,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2730,
											"end": 2826,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2730,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2819,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2826,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13966,
											"end": 14336,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13966,
											"end": 14336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14114,
											"end": 14115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14097,
											"end": 14116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14097,
											"end": 14116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14097,
											"end": 14116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH data",
											"source": 0,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14089,
											"end": 14157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14175,
											"end": 14196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14175,
											"end": 14196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14175,
											"end": 14182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14175,
											"end": 14196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14175,
											"end": 14196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14175,
											"end": 14196,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14175,
											"end": 14196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH data",
											"source": 0,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14167,
											"end": 14235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14257,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14263,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14265,
											"end": 14272,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14246,
											"end": 14273,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14282,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14246,
											"end": 14282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14313,
											"end": 14320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14306,
											"end": 14311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14322,
											"end": 14328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14329,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13966,
											"end": 14336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13966,
											"end": 14336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13966,
											"end": 14336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13966,
											"end": 14336,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14617,
											"end": 15064,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14617,
											"end": 15064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14774,
											"end": 14799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14784,
											"end": 14789,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14774,
											"end": 14783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14774,
											"end": 14799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14774,
											"end": 14799,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14774,
											"end": 14799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14813,
											"end": 14829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14809,
											"end": 15058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14874,
											"end": 14890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14874,
											"end": 14900,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14874,
											"end": 14900,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14866,
											"end": 14934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14979,
											"end": 15030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14988,
											"end": 14993,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14995,
											"end": 15002,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15023,
											"end": 15029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15004,
											"end": 15020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15004,
											"end": 15029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14979,
											"end": 14987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14979,
											"end": 15030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14979,
											"end": 15030,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14979,
											"end": 15030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14809,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14617,
											"end": 15064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14617,
											"end": 15064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14617,
											"end": 15064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14617,
											"end": 15064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14617,
											"end": 15064,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10918,
											"end": 11741,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 10918,
											"end": 11741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11060,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11044,
											"end": 11062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11044,
											"end": 11062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11062,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11062,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH data",
											"source": 0,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11036,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH data",
											"source": 0,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11114,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11210,
											"end": 11214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11216,
											"end": 11218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11220,
											"end": 11226,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11189,
											"end": 11227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11189,
											"end": 11227,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11189,
											"end": 11227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11238,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11260,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11270,
											"end": 11274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11314,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH data",
											"source": 0,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11426,
											"end": 11432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11403,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11408,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11432,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11394,
											"end": 11432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11618,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11619,
											"end": 11621,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11675,
											"end": 11677,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11669,
											"end": 11673,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11679,
											"end": 11685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11697,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11717,
											"end": 11721,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11723,
											"end": 11725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11727,
											"end": 11733,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11697,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11697,
											"end": 11734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11697,
											"end": 11734,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11697,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 11741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 11741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 11741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 11741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 11741,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12017,
											"end": 12558,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12017,
											"end": 12558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12100,
											"end": 12121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12100,
											"end": 12121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12100,
											"end": 12107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12100,
											"end": 12121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12100,
											"end": 12121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12100,
											"end": 12121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12100,
											"end": 12121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12092,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12197,
											"end": 12198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12201,
											"end": 12208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12168,
											"end": 12217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12168,
											"end": 12217,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12168,
											"end": 12217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12244,
											"end": 12250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12240,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 12228,
											"end": 12240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12421,
											"end": 12427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12408,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12409,
											"end": 12416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12399,
											"end": 12427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12476,
											"end": 12483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12485,
											"end": 12491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12492,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12503,
											"end": 12551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12531,
											"end": 12532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12535,
											"end": 12542,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12503,
											"end": 12522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12503,
											"end": 12551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12503,
											"end": 12551,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12503,
											"end": 12551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12558,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3687,
											"end": 4185,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3687,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4102,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4159,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4180,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 4185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 4185,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15648,
											"end": 15769,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 15648,
											"end": 15769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15648,
											"end": 15769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15648,
											"end": 15769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15648,
											"end": 15769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15648,
											"end": 15769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16357,
											"end": 16477,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 16357,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16357,
											"end": 16477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16357,
											"end": 16477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16357,
											"end": 16477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16357,
											"end": 16477,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "94"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "135"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "134"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "135"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "134"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "136"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "137"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "136"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "137"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "134"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "138"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "139"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "138"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "139"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "141"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "141"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize()": "8129fc1c",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize()\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer} Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDT.sol\":\"USDT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/USDT.sol\":{\"keccak256\":\"0x8e5b8f9ac4629eac34ddf8545c91132d5063cdf221f262af4617c24af45c6f32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c32f488ba184d596578be8b52443d3cfe26ca3588a2f96d6006f156761a10c\",\"dweb:/ipfs/QmYMwT5KJ48zLj1HJZbAPYqMnD8LrMFRQA3ugUnoH44ops\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 98,
								"contract": "contracts/USDT.sol:USDT",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 101,
								"contract": "contracts/USDT.sol:USDT",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 166,
								"contract": "contracts/USDT.sol:USDT",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 200,
								"contract": "contracts/USDT.sol:USDT",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 206,
								"contract": "contracts/USDT.sol:USDT",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 208,
								"contract": "contracts/USDT.sol:USDT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 210,
								"contract": "contracts/USDT.sol:USDT",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 212,
								"contract": "contracts/USDT.sol:USDT",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contracts/USDT.sol:86:5: Warning: Function state mutability can be restricted to pure\n    function _msgData() internal view virtual returns (bytes calldata) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2931,
					"file": "contracts/USDT.sol",
					"start": 2832
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/USDT.sol": {
				"ast": {
					"absolutePath": "contracts/USDT.sol",
					"exportedSymbols": {
						"Context": [
							95
						],
						"IERC20": [
							76
						],
						"IERC20Metadata": [
							188
						],
						"Initializable": [
							167
						],
						"USDT": [
							781
						]
					},
					"id": 782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "155:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 10,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "333:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "355:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "375:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "332:57:0"
									},
									"src": "318:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "396:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 19,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "564:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "587:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "612:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "563:63:0"
									},
									"src": "549:78:0"
								},
								{
									"body": null,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "633:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "750:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "749:9:0"
									},
									"scope": 76,
									"src": "704:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "765:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "860:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "901:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "900:9:0"
									},
									"scope": 76,
									"src": "842:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "916:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "1141:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "1153:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1140:28:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "1187:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1187:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1186:6:0"
									},
									"scope": 76,
									"src": "1123:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1199:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "1487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "1502:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1486:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "1542:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1541:9:0"
									},
									"scope": 76,
									"src": "1468:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1557:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "2221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "2238:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2220:33:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "2272:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2272:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2271:6:0"
									},
									"scope": 76,
									"src": "2204:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2284:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2629:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2649:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2597:72:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2688:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 72,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2688:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2687:6:0"
									},
									"scope": 76,
									"src": "2576:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 782,
							"src": "132:2564:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 95,
							"linearizedBaseContracts": [
								95
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "2792:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 81,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "2809:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2809:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 80,
												"id": 83,
												"nodeType": "Return",
												"src": "2802:17:0"
											}
										]
									},
									"documentation": null,
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2749:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 85,
												"src": "2783:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2782:9:0"
									},
									"scope": 95,
									"src": "2730:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2899:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 90,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "2916:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2916:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 89,
												"id": 92,
												"nodeType": "Return",
												"src": "2909:15:0"
											}
										]
									},
									"documentation": null,
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2849:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 94,
												"src": "2883:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 87,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2883:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2882:16:0"
									},
									"scope": 95,
									"src": "2832:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 782,
							"src": "2698:235:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "2963:69:0",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 98,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 167,
									"src": "3035:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 97,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3035:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3064:87:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 101,
									"mutability": "mutable",
									"name": "initializing",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 167,
									"src": "3154:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 100,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3154:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "3288:313:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "3302:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 106,
																		"name": "isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "3318:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3318:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3302:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3337:12:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "3338:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3302:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3351:48:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															},
															"value": "Contract instance has already been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "3294:106:0"
											},
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 139,
														"src": "3407:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 115,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3407:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"argumentTypes": null,
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3429:13:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 117,
														"name": "initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "3430:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3407:35:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 120,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "3452:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 130,
												"nodeType": "IfStatement",
												"src": "3448:80:0",
												"trueBody": {
													"id": 129,
													"nodeType": "Block",
													"src": "3468:60:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 121,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "3476:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3491:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3476:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "3476:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 125,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "3503:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3517:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3503:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 128,
															"nodeType": "ExpressionStatement",
															"src": "3503:18:0"
														}
													]
												}
											},
											{
												"id": 131,
												"nodeType": "PlaceholderStatement",
												"src": "3534:1:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 132,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "3546:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 138,
												"nodeType": "IfStatement",
												"src": "3542:55:0",
												"trueBody": {
													"id": 137,
													"nodeType": "Block",
													"src": "3562:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 133,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "3570:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3585:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3570:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 136,
															"nodeType": "ExpressionStatement",
															"src": "3570:20:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3184:78:0",
										"text": " @dev Modifier to use in the initializer function of a contract."
									},
									"id": 140,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3285:2:0"
									},
									"src": "3265:336:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "3740:445:0",
										"statements": [
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"mutability": "mutable",
														"name": "self",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 161,
														"src": "4075:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 146,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4075:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 150,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -28,
															"src": "4098:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$167",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$167",
																"typeString": "contract Initializable"
															}
														],
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4090:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 148,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4090:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4090:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4075:28:0"
											},
											{
												"assignments": [
													154
												],
												"declarations": [
													{
														"constant": false,
														"id": 154,
														"mutability": "mutable",
														"name": "cs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 161,
														"src": "4109:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 153,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4109:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4109:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4134:27:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4136:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "4154:4:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "4142:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4142:17:0"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "4136:2:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 154,
														"isOffset": false,
														"isSlot": false,
														"src": "4136:2:0",
														"valueSize": 1
													},
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "4154:4:0",
														"valueSize": 1
													}
												],
												"id": 156,
												"nodeType": "InlineAssembly",
												"src": "4125:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 157,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "4173:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4179:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 145,
												"id": 160,
												"nodeType": "Return",
												"src": "4166:14:0"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3605:79:0",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConstructor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3709:2:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 162,
												"src": "3734:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3733:6:0"
									},
									"scope": 167,
									"src": "3687:498:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 166,
									"mutability": "mutable",
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 167,
									"src": "4260:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4260:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 165,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 164,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4268:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4260:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 782,
							"src": "2935:1357:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 168,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 76,
										"src": "4322:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									},
									"id": 169,
									"nodeType": "InheritanceSpecifier",
									"src": "4322:6:0"
								}
							],
							"contractDependencies": [
								76
							],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 188,
							"linearizedBaseContracts": [
								188,
								76
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4335:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:2:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 175,
												"src": "4433:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 172,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4433:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4432:15:0"
									},
									"scope": 188,
									"src": "4394:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "4454:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4530:2:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "4556:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4556:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4555:15:0"
									},
									"scope": 188,
									"src": "4515:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "4577:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4664:2:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 187,
												"src": "4690:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 184,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4690:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4689:7:0"
									},
									"scope": 188,
									"src": "4647:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 782,
							"src": "4294:405:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 189,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 167,
										"src": "4718:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$167",
											"typeString": "contract Initializable"
										}
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "4718:13:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 191,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 95,
										"src": "4732:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$95",
											"typeString": "contract Context"
										}
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "4732:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 193,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 76,
										"src": "4741:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "4741:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 195,
										"name": "IERC20Metadata",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 188,
										"src": "4749:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$188",
											"typeString": "contract IERC20Metadata"
										}
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "4749:14:0"
								}
							],
							"contractDependencies": [
								76,
								95,
								167,
								188
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 781,
							"linearizedBaseContracts": [
								781,
								188,
								76,
								95,
								167
							],
							"name": "USDT",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 200,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 781,
									"src": "4770:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 199,
										"keyType": {
											"id": 197,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4778:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4770:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 198,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4789:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 206,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 781,
									"src": "4822:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 205,
										"keyType": {
											"id": 201,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4830:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4822:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 204,
											"keyType": {
												"id": 202,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4849:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4841:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 203,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4860:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 208,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 781,
									"src": "4896:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 207,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4896:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 210,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 781,
									"src": "4931:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 209,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4931:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 212,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 781,
									"src": "4957:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 211,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4957:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "5331:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 218,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "5341:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "75736474",
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5349:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
															"typeString": "literal_string \"usdt\""
														},
														"value": "usdt"
													},
													"src": "5341:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "5341:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 222,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "5365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "55534454",
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5375:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
															"typeString": "literal_string \"USDT\""
														},
														"value": "USDT"
													},
													"src": "5365:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "5365:16:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "4987:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"functionSelector": "8129fc1c",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 216,
											"modifierName": {
												"argumentTypes": null,
												"id": 215,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 140,
												"src": "5320:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5320:11:0"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5310:2:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5331:0:0"
									},
									"scope": 781,
									"src": "5291:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										175
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "5522:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 234,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 210,
													"src": "5539:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 233,
												"id": 235,
												"nodeType": "Return",
												"src": "5532:12:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "5394:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 230,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5489:8:0"
									},
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5466:2:0"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "5507:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5507:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5506:15:0"
									},
									"scope": 781,
									"src": "5453:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										181
									],
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "5735:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 244,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 212,
													"src": "5752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 243,
												"id": 245,
												"nodeType": "Return",
												"src": "5745:14:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "5557:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 240,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5702:8:0"
									},
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5679:2:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "5720:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5719:15:0"
									},
									"scope": 781,
									"src": "5664:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										187
									],
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6455:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6472:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 253,
												"id": 255,
												"nodeType": "Return",
												"src": "6465:9:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "5772:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 250,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6430:8:0"
									},
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6407:2:0"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 257,
												"src": "6448:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 251,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6448:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6447:7:0"
									},
									"scope": 781,
									"src": "6390:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "6611:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 264,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "6628:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 265,
												"nodeType": "Return",
												"src": "6621:19:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6487:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6584:8:0"
									},
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6561:2:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "6602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6601:9:0"
									},
									"scope": 781,
									"src": "6541:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										33
									],
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "6788:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 276,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6805:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 278,
													"indexExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "6815:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6805:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 275,
												"id": 279,
												"nodeType": "Return",
												"src": "6798:25:0"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "6653:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6761:8:0"
									},
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "6724:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6723:17:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "6779:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:9:0"
									},
									"scope": 781,
									"src": "6705:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "6910:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 291,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "6926:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 292,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "6936:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "6920:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6920:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "6920:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6961:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 289,
												"id": 296,
												"nodeType": "Return",
												"src": "6954:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "40c10f19",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 298,
												"src": "6850:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 298,
												"src": "6867:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6867:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6849:31:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 298,
												"src": "6904:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6904:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6903:6:0"
									},
									"scope": 781,
									"src": "6836:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										43
									],
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "7251:104:0",
										"statements": [
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 322,
														"src": "7261:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 309,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7261:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 311,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "7277:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7277:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7261:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 315,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "7309:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 316,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "7316:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 317,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "7320:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 314,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7299:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7299:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "7299:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7344:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 308,
												"id": 321,
												"nodeType": "Return",
												"src": "7337:11:0"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "6977:184:0",
										"text": " @dev See {IERC20-transfer}\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 305,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7227:8:0"
									},
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "7184:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "7196:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7183:28:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "7245:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7244:6:0"
									},
									"scope": 781,
									"src": "7166:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										53
									],
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "7511:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 334,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "7528:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 336,
														"indexExpression": {
															"argumentTypes": null,
															"id": 335,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "7540:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7528:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 338,
													"indexExpression": {
														"argumentTypes": null,
														"id": 337,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "7547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7528:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 333,
												"id": 339,
												"nodeType": "Return",
												"src": "7521:34:0"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "7361:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 330,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7484:8:0"
									},
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "7432:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "7447:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7431:32:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "7502:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7501:9:0"
									},
									"scope": 781,
									"src": "7413:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										63
									],
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "7959:108:0",
										"statements": [
											{
												"assignments": [
													353
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 365,
														"src": "7969:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 352,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7969:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 356,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 354,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "7985:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7985:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7969:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 358,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8016:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 359,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "8023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 360,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "8032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 357,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "8007:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8007:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "8007:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8056:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 351,
												"id": 364,
												"nodeType": "Return",
												"src": "8049:11:0"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "7568:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 348,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7935:8:0"
									},
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "7887:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "7904:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7886:33:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "7953:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7953:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7952:6:0"
									},
									"scope": 781,
									"src": "7870:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										75
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "8762:153:0",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 398,
														"src": "8772:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 379,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8772:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 383,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 381,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "8790:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8790:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8772:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 385,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "8828:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 386,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "8834:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 387,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "8843:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "8812:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8812:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "8812:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "8870:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "8876:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 393,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "8880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "8860:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8860:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "8860:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8904:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 378,
												"id": 397,
												"nodeType": "Return",
												"src": "8897:11:0"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "8073:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 375,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8738:8:0"
									},
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "8660:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "8682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "8702:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8650:72:0"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "8756:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8756:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8755:6:0"
									},
									"scope": 781,
									"src": "8629:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "9404:140:0",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 427,
														"src": "9414:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 409,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9414:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 411,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "9430:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9430:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9414:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 415,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "9461:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 416,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "9468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 418,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "9487:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 419,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "9494:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 417,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "9477:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9477:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 421,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "9505:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9477:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 414,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "9452:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9452:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "9452:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9533:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 408,
												"id": 426,
												"nodeType": "Return",
												"src": "9526:11:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "8921:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "9337:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "9354:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9336:37:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "9398:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9398:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9397:6:0"
									},
									"scope": 781,
									"src": "9310:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "10130:334:0",
										"statements": [
											{
												"assignments": [
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 467,
														"src": "10140:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 438,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10140:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 440,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "10156:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10156:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10140:28:0"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 467,
														"src": "10178:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10178:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 446,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "10215:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 447,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "10222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 445,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "10205:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10205:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10178:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 451,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "10248:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 452,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "10268:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10248:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10285:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10240:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "10240:85:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 458,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "10371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 459,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "10378:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 460,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "10387:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 461,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "10406:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10387:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "10362:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10362:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "10362:60:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10453:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 437,
												"id": 466,
												"nodeType": "Return",
												"src": "10446:11:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "9550:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "10058:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10058:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "10075:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10057:42:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "10124:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10123:6:0"
									},
									"scope": 781,
									"src": "10031:433:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "11026:715:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 479,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "11044:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11060:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11052:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 480,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11052:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11052:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11044:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11064:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11036:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11036:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "11036:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 489,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "11122:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11136:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11128:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 490,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11128:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11128:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11122:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11140:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11114:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11114:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "11114:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 499,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "11210:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 500,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "11216:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 501,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "11220:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "11189:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11189:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "11189:38:0"
											},
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "fromBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 543,
														"src": "11238:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11238:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 506,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "11260:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 508,
													"indexExpression": {
														"argumentTypes": null,
														"id": 507,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "11270:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11260:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11238:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 511,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "11293:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 512,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "11308:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11293:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11316:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11285:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11285:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "11285:72:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 517,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "11394:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 519,
														"indexExpression": {
															"argumentTypes": null,
															"id": 518,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "11404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11394:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 520,
															"name": "fromBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "11412:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 521,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "11426:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11412:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11394:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "11394:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 525,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "11609:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 527,
														"indexExpression": {
															"argumentTypes": null,
															"id": 526,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "11619:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11609:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 528,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "11626:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11609:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "11609:23:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 532,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "11669:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "11675:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 534,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "11679:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 531,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "11660:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11660:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "EmitStatement",
												"src": "11655:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 538,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "11717:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 539,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "11723:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "11727:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "11697:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11697:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "11697:37:0"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "10470:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 544,
												"src": "10946:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10946:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 544,
												"src": "10968:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 544,
												"src": "10988:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10936:72:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11026:0:0"
									},
									"scope": 781,
									"src": "10918:823:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "12082:476:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 553,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "12100:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12119:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12111:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 554,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12111:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "12100:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12123:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12092:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12092:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "12092:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12197:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12189:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 563,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12189:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12189:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "12201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "12210:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "12168:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12168:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "12168:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 571,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "12228:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 572,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "12244:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12228:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "12228:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 575,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "12399:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 577,
														"indexExpression": {
															"argumentTypes": null,
															"id": 576,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "12409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12399:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 578,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "12421:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12399:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "12399:28:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12472:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12464:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 582,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12464:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12464:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 586,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "12476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 587,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "12485:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "12455:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12455:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "EmitStatement",
												"src": "12450:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12531:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12523:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 591,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12523:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12523:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 595,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "12535:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 596,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "12544:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "12503:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12503:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "12503:48:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "11747:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "12032:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "12049:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12031:33:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12082:0:0"
									},
									"scope": 781,
									"src": "12017:541:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "12943:600:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 609,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "12961:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12980:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12972:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 610,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12972:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12972:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "12961:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12984:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12953:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12953:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "12953:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 619,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "13052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13069:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13061:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 620,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13061:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 624,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "13073:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 618,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "13031:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13031:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "13031:49:0"
											},
											{
												"assignments": [
													628
												],
												"declarations": [
													{
														"constant": false,
														"id": 628,
														"mutability": "mutable",
														"name": "accountBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 670,
														"src": "13091:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13091:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 629,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "13116:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 631,
													"indexExpression": {
														"argumentTypes": null,
														"id": 630,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "13126:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13116:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13091:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 634,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "13152:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 635,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "13170:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13152:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13178:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13144:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "13144:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 640,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "13252:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 642,
														"indexExpression": {
															"argumentTypes": null,
															"id": 641,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "13262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13252:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 643,
															"name": "accountBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "13273:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 644,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "13290:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13273:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13252:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "13252:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 648,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "13389:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 649,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "13405:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13389:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "13389:22:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 653,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "13449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13466:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13458:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 654,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13458:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13458:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 658,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "13470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 652,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "13440:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13440:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "EmitStatement",
												"src": "13435:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 662,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "13508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13525:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13517:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 663,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13517:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13517:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 667,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "13529:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 661,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "13488:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13488:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "13488:48:0"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "12564:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "12893:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "12910:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12892:33:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12943:0:0"
									},
									"scope": 781,
									"src": "12878:665:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "14079:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 682,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "14097:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14114:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14106:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 683,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14106:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14106:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14097:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14118:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14089:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "14089:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 692,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "14175:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14194:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14186:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 693,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14186:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14186:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14175:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14198:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14167:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "14167:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 701,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "14246:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 704,
															"indexExpression": {
																"argumentTypes": null,
																"id": 702,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "14258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14246:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 705,
														"indexExpression": {
															"argumentTypes": null,
															"id": 703,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "14265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14246:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 706,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "14276:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14246:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "14246:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 710,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "14306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 711,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "14313:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 712,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "14322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "14297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14297:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "EmitStatement",
												"src": "14292:37:0"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "13549:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "13993:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "14016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "14041:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13983:78:0"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14079:0:0"
									},
									"scope": 781,
									"src": "13966:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "14737:327:0",
										"statements": [
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 757,
														"src": "14747:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14747:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 732,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 729,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "14784:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 730,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "14791:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 728,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "14774:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14774:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14747:52:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 733,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "14813:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14838:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 735,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14838:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 734,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -27,
																"src": "14833:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14833:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "14833:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14813:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 756,
												"nodeType": "IfStatement",
												"src": "14809:249:0",
												"trueBody": {
													"id": 755,
													"nodeType": "Block",
													"src": "14852:206:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 741,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "14874:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 742,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 723,
																			"src": "14894:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14874:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14902:31:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 740,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "14866:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14866:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "ExpressionStatement",
															"src": "14866:68:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 748,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "14988:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 749,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "14995:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 750,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "15004:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 751,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 723,
																			"src": "15023:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15004:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 747,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "14979:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14979:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 754,
															"nodeType": "ExpressionStatement",
															"src": "14979:51:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "14342:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "14651:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "14674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "14699:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14641:78:0"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14737:0:0"
									},
									"scope": 781,
									"src": "14617:447:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "15767:2:0",
										"statements": []
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "15070:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 769,
												"src": "15687:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 769,
												"src": "15709:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 769,
												"src": "15729:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15677:72:0"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15767:0:0"
									},
									"scope": 781,
									"src": "15648:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "16475:2:0",
										"statements": []
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "15775:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "16395:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16395:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "16417:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "16437:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16385:72:0"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16475:0:0"
									},
									"scope": 781,
									"src": "16357:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 782,
							"src": "4701:11778:0"
						}
					],
					"src": "105:16374:0"
				},
				"id": 0
			}
		}
	}
}