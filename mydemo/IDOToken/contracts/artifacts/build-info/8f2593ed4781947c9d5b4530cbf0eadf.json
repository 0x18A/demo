{
	"id": "8f2593ed4781947c9d5b4530cbf0eadf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Coffee.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity >=0.6.12;\n\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ncontract Initializable {\n\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  bool private initialized;\n\n  /**\n   * @dev Indicates that the contract is in the process of being initialized.\n   */\n  bool private initializing;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n\n    bool isTopLevelCall = !initializing;\n    if (isTopLevelCall) {\n      initializing = true;\n      initialized = true;\n    }\n\n    _;\n\n    if (isTopLevelCall) {\n      initializing = false;\n    }\n  }\n\n  /// @dev Returns true if and only if the function is running in the constructor\n  function isConstructor() private view returns (bool) {\n    // extcodesize checks the size of the code stored in an address, and\n    // address returns the current address. Since the code is still not\n    // deployed when running a constructor, any checks on its code size will\n    // yield zero, making it an effective way to detect if a contract is\n    // under construction or not.\n    address self = address(this);\n    uint256 cs;\n    assembly { cs := extcodesize(self) }\n    return cs == 0;\n  }\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\ncontract Coffee is Initializable,Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    struct UserInfo {\n        uint totalPromote;\n        address myHigherUp;\n        uint myHigherUpLock;\n    }\n\n    mapping(address=>UserInfo) public sentCOF;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n\n    function initialize() public initializer{\n        _name = \"coffee\";\n        _symbol = \"COF\";\n    }\n    function getSentCOFPromote(address _user)public view returns(uint){\n        return sentCOF[_user].totalPromote;\n    }\n    function getSentCOFHigherUp(address _user)public view returns(address){\n        return sentCOF[_user].myHigherUp;\n    }\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n    function mint(address _account,uint _amount)public virtual returns (bool) {\n        _mint(_account, _amount);\n        return true;\n    }\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        // unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        // }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        // unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        // }\n\n        uint BalanceFrom = balanceOf(to);\n        if (BalanceFrom == 0 && sentCOF[to].myHigherUpLock == 0){\n            sentCOF[to].myHigherUp = from;\n            sentCOF[to].totalPromote += 1;\n            sentCOF[to].myHigherUpLock = 1;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        // unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        // }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        // unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        // }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            // unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            // }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Coffee.sol": {
				"Coffee": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getSentCOFHigherUp",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getSentCOFPromote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "sentCOF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalPromote",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "myHigherUp",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "myHigherUpLock",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"initialize()": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Coffee.sol\":4701:17137  contract Coffee is Initializable,Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Coffee.sol\":4701:17137  contract Coffee is Initializable,Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb954796d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf05df5e2\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x23b872dd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1f5ed1b2\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Coffee.sol\":5861:5959  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_24:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_24)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":8278:8475  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":6949:7055  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":5678:5797  function getSentCOFHigherUp(address _user)public view returns(address){... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":9037:9323  function transferFrom(... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":6798:6889  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":9718:9952  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":7243:7379  function mint(address _account,uint _amount)public virtual returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":7113:7238  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":5453:5551  function initialize() public initializer{... */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/Coffee.sol\":6072:6174  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_54:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_54)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_57:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":10439:10872  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":7574:7763  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":5101:5142  mapping(address=>UserInfo) public sentCOF */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":7821:7970  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":5556:5673  function getSentCOFPromote(address _user)public view returns(uint){... */\n    tag_18:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coffee.sol\":5861:5959  function name() public view virtual override returns (string memory) {... */\n    tag_23:\n        /* \"contracts/Coffee.sol\":5915:5928  string memory */\n      0x60\n        /* \"contracts/Coffee.sol\":5947:5952  _name */\n      0x36\n        /* \"contracts/Coffee.sol\":5940:5952  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":5861:5959  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Coffee.sol\":8278:8475  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_30:\n        /* \"contracts/Coffee.sol\":8361:8365  bool */\n      0x00\n        /* \"contracts/Coffee.sol\":8377:8390  address owner */\n      dup1\n        /* \"contracts/Coffee.sol\":8393:8405  _msgSender() */\n      tag_78\n        /* \"contracts/Coffee.sol\":8393:8403  _msgSender */\n      tag_79\n        /* \"contracts/Coffee.sol\":8393:8405  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"contracts/Coffee.sol\":8377:8405  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":8415:8447  _approve(owner, spender, amount) */\n      tag_80\n        /* \"contracts/Coffee.sol\":8424:8429  owner */\n      dup2\n        /* \"contracts/Coffee.sol\":8431:8438  spender */\n      dup6\n        /* \"contracts/Coffee.sol\":8440:8446  amount */\n      dup6\n        /* \"contracts/Coffee.sol\":8415:8423  _approve */\n      tag_81\n        /* \"contracts/Coffee.sol\":8415:8447  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/Coffee.sol\":8464:8468  true */\n      0x01\n        /* \"contracts/Coffee.sol\":8457:8468  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Coffee.sol\":8278:8475  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":6949:7055  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_32:\n        /* \"contracts/Coffee.sol\":7010:7017  uint256 */\n      0x00\n        /* \"contracts/Coffee.sol\":7036:7048  _totalSupply */\n      sload(0x35)\n        /* \"contracts/Coffee.sol\":7029:7048  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":6949:7055  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Coffee.sol\":5678:5797  function getSentCOFHigherUp(address _user)public view returns(address){... */\n    tag_35:\n        /* \"contracts/Coffee.sol\":5740:5747  address */\n      0x00\n        /* \"contracts/Coffee.sol\":5765:5772  sentCOF */\n      0x38\n        /* \"contracts/Coffee.sol\":5765:5779  sentCOF[_user] */\n      0x00\n        /* \"contracts/Coffee.sol\":5773:5778  _user */\n      dup4\n        /* \"contracts/Coffee.sol\":5765:5779  sentCOF[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coffee.sol\":5765:5790  sentCOF[_user].myHigherUp */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coffee.sol\":5758:5790  return sentCOF[_user].myHigherUp */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":5678:5797  function getSentCOFHigherUp(address _user)public view returns(address){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":9037:9323  function transferFrom(... */\n    tag_38:\n        /* \"contracts/Coffee.sol\":9164:9168  bool */\n      0x00\n        /* \"contracts/Coffee.sol\":9180:9195  address spender */\n      dup1\n        /* \"contracts/Coffee.sol\":9198:9210  _msgSender() */\n      tag_85\n        /* \"contracts/Coffee.sol\":9198:9208  _msgSender */\n      tag_79\n        /* \"contracts/Coffee.sol\":9198:9210  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/Coffee.sol\":9180:9210  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":9220:9258  _spendAllowance(from, spender, amount) */\n      tag_86\n        /* \"contracts/Coffee.sol\":9236:9240  from */\n      dup6\n        /* \"contracts/Coffee.sol\":9242:9249  spender */\n      dup3\n        /* \"contracts/Coffee.sol\":9251:9257  amount */\n      dup6\n        /* \"contracts/Coffee.sol\":9220:9235  _spendAllowance */\n      tag_87\n        /* \"contracts/Coffee.sol\":9220:9258  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/Coffee.sol\":9268:9295  _transfer(from, to, amount) */\n      tag_88\n        /* \"contracts/Coffee.sol\":9278:9282  from */\n      dup6\n        /* \"contracts/Coffee.sol\":9284:9286  to */\n      dup6\n        /* \"contracts/Coffee.sol\":9288:9294  amount */\n      dup6\n        /* \"contracts/Coffee.sol\":9268:9277  _transfer */\n      tag_89\n        /* \"contracts/Coffee.sol\":9268:9295  _transfer(from, to, amount) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/Coffee.sol\":9312:9316  true */\n      0x01\n        /* \"contracts/Coffee.sol\":9305:9316  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Coffee.sol\":9037:9323  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":6798:6889  function decimals() public view virtual override returns (uint8) {... */\n    tag_40:\n        /* \"contracts/Coffee.sol\":6856:6861  uint8 */\n      0x00\n        /* \"contracts/Coffee.sol\":6880:6882  18 */\n      0x12\n        /* \"contracts/Coffee.sol\":6873:6882  return 18 */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":6798:6889  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Coffee.sol\":9718:9952  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_43:\n        /* \"contracts/Coffee.sol\":9806:9810  bool */\n      0x00\n        /* \"contracts/Coffee.sol\":9822:9835  address owner */\n      dup1\n        /* \"contracts/Coffee.sol\":9838:9850  _msgSender() */\n      tag_92\n        /* \"contracts/Coffee.sol\":9838:9848  _msgSender */\n      tag_79\n        /* \"contracts/Coffee.sol\":9838:9850  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/Coffee.sol\":9822:9850  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":9860:9924  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_93\n        /* \"contracts/Coffee.sol\":9869:9874  owner */\n      dup2\n        /* \"contracts/Coffee.sol\":9876:9883  spender */\n      dup6\n        /* \"contracts/Coffee.sol\":9913:9923  addedValue */\n      dup6\n        /* \"contracts/Coffee.sol\":9885:9910  allowance(owner, spender) */\n      tag_94\n        /* \"contracts/Coffee.sol\":9895:9900  owner */\n      dup6\n        /* \"contracts/Coffee.sol\":9902:9909  spender */\n      dup10\n        /* \"contracts/Coffee.sol\":9885:9894  allowance */\n      tag_69\n        /* \"contracts/Coffee.sol\":9885:9910  allowance(owner, spender) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/Coffee.sol\":9885:9923  allowance(owner, spender) + addedValue */\n      add\n        /* \"contracts/Coffee.sol\":9860:9868  _approve */\n      tag_81\n        /* \"contracts/Coffee.sol\":9860:9924  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/Coffee.sol\":9941:9945  true */\n      0x01\n        /* \"contracts/Coffee.sol\":9934:9945  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Coffee.sol\":9718:9952  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":7243:7379  function mint(address _account,uint _amount)public virtual returns (bool) {... */\n    tag_46:\n        /* \"contracts/Coffee.sol\":7311:7315  bool */\n      0x00\n        /* \"contracts/Coffee.sol\":7327:7351  _mint(_account, _amount) */\n      tag_96\n        /* \"contracts/Coffee.sol\":7333:7341  _account */\n      dup4\n        /* \"contracts/Coffee.sol\":7343:7350  _amount */\n      dup4\n        /* \"contracts/Coffee.sol\":7327:7332  _mint */\n      tag_97\n        /* \"contracts/Coffee.sol\":7327:7351  _mint(_account, _amount) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/Coffee.sol\":7368:7372  true */\n      0x01\n        /* \"contracts/Coffee.sol\":7361:7372  return true */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":7243:7379  function mint(address _account,uint _amount)public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":7113:7238  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_49:\n        /* \"contracts/Coffee.sol\":7187:7194  uint256 */\n      0x00\n        /* \"contracts/Coffee.sol\":7213:7222  _balances */\n      0x33\n        /* \"contracts/Coffee.sol\":7213:7231  _balances[account] */\n      0x00\n        /* \"contracts/Coffee.sol\":7223:7230  account */\n      dup4\n        /* \"contracts/Coffee.sol\":7213:7231  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Coffee.sol\":7206:7231  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":7113:7238  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":5453:5551  function initialize() public initializer{... */\n    tag_51:\n        /* \"contracts/Coffee.sol\":3302:3314  initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Coffee.sol\":3302:3333  initializing || isConstructor() */\n      dup1\n      tag_100\n      jumpi\n      pop\n        /* \"contracts/Coffee.sol\":3318:3333  isConstructor() */\n      tag_101\n        /* \"contracts/Coffee.sol\":3318:3331  isConstructor */\n      tag_102\n        /* \"contracts/Coffee.sol\":3318:3333  isConstructor() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Coffee.sol\":3302:3333  initializing || isConstructor() */\n    tag_100:\n        /* \"contracts/Coffee.sol\":3302:3349  initializing || isConstructor() || !initialized */\n      dup1\n      tag_103\n      jumpi\n      pop\n        /* \"contracts/Coffee.sol\":3338:3349  initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Coffee.sol\":3337:3349  !initialized */\n      iszero\n        /* \"contracts/Coffee.sol\":3302:3349  initializing || isConstructor() || !initialized */\n    tag_103:\n        /* \"contracts/Coffee.sol\":3294:3400  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/Coffee.sol\":3407:3426  bool isTopLevelCall */\n      0x00\n        /* \"contracts/Coffee.sol\":3430:3442  initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Coffee.sol\":3429:3442  !initializing */\n      iszero\n        /* \"contracts/Coffee.sol\":3407:3442  bool isTopLevelCall = !initializing */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":3452:3466  isTopLevelCall */\n      dup1\n        /* \"contracts/Coffee.sol\":3448:3528  if (isTopLevelCall) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"contracts/Coffee.sol\":3491:3495  true */\n      0x01\n        /* \"contracts/Coffee.sol\":3476:3488  initializing */\n      0x00\n      0x01\n        /* \"contracts/Coffee.sol\":3476:3495  initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":3517:3521  true */\n      0x01\n        /* \"contracts/Coffee.sol\":3503:3514  initialized */\n      0x00\n      dup1\n        /* \"contracts/Coffee.sol\":3503:3521  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":3448:3528  if (isTopLevelCall) {... */\n    tag_105:\n        /* \"contracts/Coffee.sol\":5503:5519  _name = \"coffee\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x636f666665650000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Coffee.sol\":5503:5508  _name */\n      0x36\n        /* \"contracts/Coffee.sol\":5503:5519  _name = \"coffee\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_107\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      pop\n        /* \"contracts/Coffee.sol\":5529:5544  _symbol = \"COF\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x434f460000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Coffee.sol\":5529:5536  _symbol */\n      0x37\n        /* \"contracts/Coffee.sol\":5529:5544  _symbol = \"COF\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_109\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_109:\n      pop\n        /* \"contracts/Coffee.sol\":3546:3560  isTopLevelCall */\n      dup1\n        /* \"contracts/Coffee.sol\":3542:3597  if (isTopLevelCall) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"contracts/Coffee.sol\":3585:3590  false */\n      0x00\n        /* \"contracts/Coffee.sol\":3570:3582  initializing */\n      dup1\n      0x01\n        /* \"contracts/Coffee.sol\":3570:3590  initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":3542:3597  if (isTopLevelCall) {... */\n    tag_110:\n        /* \"contracts/Coffee.sol\":5453:5551  function initialize() public initializer{... */\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":6072:6174  function symbol() public view virtual override returns (string memory) {... */\n    tag_53:\n        /* \"contracts/Coffee.sol\":6128:6141  string memory */\n      0x60\n        /* \"contracts/Coffee.sol\":6160:6167  _symbol */\n      0x37\n        /* \"contracts/Coffee.sol\":6153:6167  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_113\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_112)\n    tag_113:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_114:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_114\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":6072:6174  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Coffee.sol\":10439:10872  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_60:\n        /* \"contracts/Coffee.sol\":10532:10536  bool */\n      0x00\n        /* \"contracts/Coffee.sol\":10548:10561  address owner */\n      dup1\n        /* \"contracts/Coffee.sol\":10564:10576  _msgSender() */\n      tag_116\n        /* \"contracts/Coffee.sol\":10564:10574  _msgSender */\n      tag_79\n        /* \"contracts/Coffee.sol\":10564:10576  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/Coffee.sol\":10548:10576  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":10586:10610  uint256 currentAllowance */\n      0x00\n        /* \"contracts/Coffee.sol\":10613:10638  allowance(owner, spender) */\n      tag_117\n        /* \"contracts/Coffee.sol\":10623:10628  owner */\n      dup3\n        /* \"contracts/Coffee.sol\":10630:10637  spender */\n      dup7\n        /* \"contracts/Coffee.sol\":10613:10622  allowance */\n      tag_69\n        /* \"contracts/Coffee.sol\":10613:10638  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Coffee.sol\":10586:10638  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":10676:10691  subtractedValue */\n      dup4\n        /* \"contracts/Coffee.sol\":10656:10672  currentAllowance */\n      dup2\n        /* \"contracts/Coffee.sol\":10656:10691  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/Coffee.sol\":10648:10733  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/Coffee.sol\":10770:10830  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_119\n        /* \"contracts/Coffee.sol\":10779:10784  owner */\n      dup3\n        /* \"contracts/Coffee.sol\":10786:10793  spender */\n      dup7\n        /* \"contracts/Coffee.sol\":10814:10829  subtractedValue */\n      dup7\n        /* \"contracts/Coffee.sol\":10795:10811  currentAllowance */\n      dup5\n        /* \"contracts/Coffee.sol\":10795:10829  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/Coffee.sol\":10770:10778  _approve */\n      tag_81\n        /* \"contracts/Coffee.sol\":10770:10830  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/Coffee.sol\":10861:10865  true */\n      0x01\n        /* \"contracts/Coffee.sol\":10854:10865  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Coffee.sol\":10439:10872  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":7574:7763  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_63:\n        /* \"contracts/Coffee.sol\":7653:7657  bool */\n      0x00\n        /* \"contracts/Coffee.sol\":7669:7682  address owner */\n      dup1\n        /* \"contracts/Coffee.sol\":7685:7697  _msgSender() */\n      tag_121\n        /* \"contracts/Coffee.sol\":7685:7695  _msgSender */\n      tag_79\n        /* \"contracts/Coffee.sol\":7685:7697  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Coffee.sol\":7669:7697  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":7707:7735  _transfer(owner, to, amount) */\n      tag_122\n        /* \"contracts/Coffee.sol\":7717:7722  owner */\n      dup2\n        /* \"contracts/Coffee.sol\":7724:7726  to */\n      dup6\n        /* \"contracts/Coffee.sol\":7728:7734  amount */\n      dup6\n        /* \"contracts/Coffee.sol\":7707:7716  _transfer */\n      tag_89\n        /* \"contracts/Coffee.sol\":7707:7735  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/Coffee.sol\":7752:7756  true */\n      0x01\n        /* \"contracts/Coffee.sol\":7745:7756  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Coffee.sol\":7574:7763  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":5101:5142  mapping(address=>UserInfo) public sentCOF */\n    tag_66:\n      mstore(0x20, 0x38)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/Coffee.sol\":7821:7970  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_69:\n        /* \"contracts/Coffee.sol\":7910:7917  uint256 */\n      0x00\n        /* \"contracts/Coffee.sol\":7936:7947  _allowances */\n      0x34\n        /* \"contracts/Coffee.sol\":7936:7954  _allowances[owner] */\n      0x00\n        /* \"contracts/Coffee.sol\":7948:7953  owner */\n      dup5\n        /* \"contracts/Coffee.sol\":7936:7954  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coffee.sol\":7936:7963  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/Coffee.sol\":7955:7962  spender */\n      dup4\n        /* \"contracts/Coffee.sol\":7936:7963  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Coffee.sol\":7929:7963  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":7821:7970  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":5556:5673  function getSentCOFPromote(address _user)public view returns(uint){... */\n    tag_72:\n        /* \"contracts/Coffee.sol\":5617:5621  uint */\n      0x00\n        /* \"contracts/Coffee.sol\":5639:5646  sentCOF */\n      0x38\n        /* \"contracts/Coffee.sol\":5639:5653  sentCOF[_user] */\n      0x00\n        /* \"contracts/Coffee.sol\":5647:5652  _user */\n      dup4\n        /* \"contracts/Coffee.sol\":5639:5653  sentCOF[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coffee.sol\":5639:5666  sentCOF[_user].totalPromote */\n      0x00\n      add\n      sload\n        /* \"contracts/Coffee.sol\":5632:5666  return sentCOF[_user].totalPromote */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":5556:5673  function getSentCOFPromote(address _user)public view returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":2730:2826  function _msgSender() internal view virtual returns (address) {... */\n    tag_79:\n        /* \"contracts/Coffee.sol\":2783:2790  address */\n      0x00\n        /* \"contracts/Coffee.sol\":2809:2819  msg.sender */\n      caller\n        /* \"contracts/Coffee.sol\":2802:2819  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":2730:2826  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Coffee.sol\":14624:14994  function _approve(... */\n    tag_81:\n        /* \"contracts/Coffee.sol\":14772:14773  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":14755:14774  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coffee.sol\":14755:14760  owner */\n      dup4\n        /* \"contracts/Coffee.sol\":14755:14774  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Coffee.sol\":14747:14815  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/Coffee.sol\":14852:14853  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":14833:14854  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coffee.sol\":14833:14840  spender */\n      dup3\n        /* \"contracts/Coffee.sol\":14833:14854  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Coffee.sol\":14825:14893  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/Coffee.sol\":14934:14940  amount */\n      dup1\n        /* \"contracts/Coffee.sol\":14904:14915  _allowances */\n      0x34\n        /* \"contracts/Coffee.sol\":14904:14922  _allowances[owner] */\n      0x00\n        /* \"contracts/Coffee.sol\":14916:14921  owner */\n      dup6\n        /* \"contracts/Coffee.sol\":14904:14922  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coffee.sol\":14904:14931  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/Coffee.sol\":14923:14930  spender */\n      dup5\n        /* \"contracts/Coffee.sol\":14904:14931  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coffee.sol\":14904:14940  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":14971:14978  spender */\n      dup2\n        /* \"contracts/Coffee.sol\":14955:14987  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coffee.sol\":14964:14969  owner */\n      dup4\n        /* \"contracts/Coffee.sol\":14955:14987  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/Coffee.sol\":14980:14986  amount */\n      dup4\n        /* \"contracts/Coffee.sol\":14955:14987  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Coffee.sol\":14624:14994  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":15275:15722  function _spendAllowance(... */\n    tag_87:\n        /* \"contracts/Coffee.sol\":15405:15429  uint256 currentAllowance */\n      0x00\n        /* \"contracts/Coffee.sol\":15432:15457  allowance(owner, spender) */\n      tag_130\n        /* \"contracts/Coffee.sol\":15442:15447  owner */\n      dup5\n        /* \"contracts/Coffee.sol\":15449:15456  spender */\n      dup5\n        /* \"contracts/Coffee.sol\":15432:15441  allowance */\n      tag_69\n        /* \"contracts/Coffee.sol\":15432:15457  allowance(owner, spender) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/Coffee.sol\":15405:15457  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":15491:15508  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Coffee.sol\":15471:15487  currentAllowance */\n      dup2\n        /* \"contracts/Coffee.sol\":15471:15508  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/Coffee.sol\":15467:15716  if (currentAllowance != type(uint256).max) {... */\n      tag_131\n      jumpi\n        /* \"contracts/Coffee.sol\":15552:15558  amount */\n      dup2\n        /* \"contracts/Coffee.sol\":15532:15548  currentAllowance */\n      dup2\n        /* \"contracts/Coffee.sol\":15532:15558  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/Coffee.sol\":15524:15592  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/Coffee.sol\":15637:15688  _approve(owner, spender, currentAllowance - amount) */\n      tag_133\n        /* \"contracts/Coffee.sol\":15646:15651  owner */\n      dup5\n        /* \"contracts/Coffee.sol\":15653:15660  spender */\n      dup5\n        /* \"contracts/Coffee.sol\":15681:15687  amount */\n      dup5\n        /* \"contracts/Coffee.sol\":15662:15678  currentAllowance */\n      dup5\n        /* \"contracts/Coffee.sol\":15662:15687  currentAllowance - amount */\n      sub\n        /* \"contracts/Coffee.sol\":15637:15645  _approve */\n      tag_81\n        /* \"contracts/Coffee.sol\":15637:15688  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/Coffee.sol\":15467:15716  if (currentAllowance != type(uint256).max) {... */\n    tag_131:\n        /* \"contracts/Coffee.sol\":15275:15722  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":11326:12399  function _transfer(... */\n    tag_89:\n        /* \"contracts/Coffee.sol\":11468:11469  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":11452:11470  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coffee.sol\":11452:11456  from */\n      dup4\n        /* \"contracts/Coffee.sol\":11452:11470  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Coffee.sol\":11444:11512  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/Coffee.sol\":11544:11545  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":11530:11546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coffee.sol\":11530:11532  to */\n      dup3\n        /* \"contracts/Coffee.sol\":11530:11546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Coffee.sol\":11522:11586  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/Coffee.sol\":11597:11635  _beforeTokenTransfer(from, to, amount) */\n      tag_137\n        /* \"contracts/Coffee.sol\":11618:11622  from */\n      dup4\n        /* \"contracts/Coffee.sol\":11624:11626  to */\n      dup4\n        /* \"contracts/Coffee.sol\":11628:11634  amount */\n      dup4\n        /* \"contracts/Coffee.sol\":11597:11617  _beforeTokenTransfer */\n      tag_138\n        /* \"contracts/Coffee.sol\":11597:11635  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/Coffee.sol\":11646:11665  uint256 fromBalance */\n      0x00\n        /* \"contracts/Coffee.sol\":11668:11677  _balances */\n      0x33\n        /* \"contracts/Coffee.sol\":11668:11683  _balances[from] */\n      0x00\n        /* \"contracts/Coffee.sol\":11678:11682  from */\n      dup6\n        /* \"contracts/Coffee.sol\":11668:11683  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Coffee.sol\":11646:11683  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":11716:11722  amount */\n      dup2\n        /* \"contracts/Coffee.sol\":11701:11712  fromBalance */\n      dup2\n        /* \"contracts/Coffee.sol\":11701:11722  fromBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/Coffee.sol\":11693:11765  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/Coffee.sol\":11834:11840  amount */\n      dup2\n        /* \"contracts/Coffee.sol\":11820:11831  fromBalance */\n      dup2\n        /* \"contracts/Coffee.sol\":11820:11840  fromBalance - amount */\n      sub\n        /* \"contracts/Coffee.sol\":11802:11811  _balances */\n      0x33\n        /* \"contracts/Coffee.sol\":11802:11817  _balances[from] */\n      0x00\n        /* \"contracts/Coffee.sol\":11812:11816  from */\n      dup7\n        /* \"contracts/Coffee.sol\":11802:11817  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coffee.sol\":11802:11840  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":12034:12040  amount */\n      dup2\n        /* \"contracts/Coffee.sol\":12017:12026  _balances */\n      0x33\n        /* \"contracts/Coffee.sol\":12017:12030  _balances[to] */\n      0x00\n        /* \"contracts/Coffee.sol\":12027:12029  to */\n      dup6\n        /* \"contracts/Coffee.sol\":12017:12030  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Coffee.sol\":12017:12040  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":12064:12080  uint BalanceFrom */\n      0x00\n        /* \"contracts/Coffee.sol\":12083:12096  balanceOf(to) */\n      tag_140\n        /* \"contracts/Coffee.sol\":12093:12095  to */\n      dup5\n        /* \"contracts/Coffee.sol\":12083:12092  balanceOf */\n      tag_49\n        /* \"contracts/Coffee.sol\":12083:12096  balanceOf(to) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/Coffee.sol\":12064:12096  uint BalanceFrom = balanceOf(to) */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":12125:12126  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":12110:12121  BalanceFrom */\n      dup2\n        /* \"contracts/Coffee.sol\":12110:12126  BalanceFrom == 0 */\n      eq\n        /* \"contracts/Coffee.sol\":12110:12161  BalanceFrom == 0 && sentCOF[to].myHigherUpLock == 0 */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"contracts/Coffee.sol\":12160:12161  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":12130:12137  sentCOF */\n      0x38\n        /* \"contracts/Coffee.sol\":12130:12141  sentCOF[to] */\n      0x00\n        /* \"contracts/Coffee.sol\":12138:12140  to */\n      dup7\n        /* \"contracts/Coffee.sol\":12130:12141  sentCOF[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coffee.sol\":12130:12156  sentCOF[to].myHigherUpLock */\n      0x02\n      add\n      sload\n        /* \"contracts/Coffee.sol\":12130:12161  sentCOF[to].myHigherUpLock == 0 */\n      eq\n        /* \"contracts/Coffee.sol\":12110:12161  BalanceFrom == 0 && sentCOF[to].myHigherUpLock == 0 */\n    tag_141:\n        /* \"contracts/Coffee.sol\":12106:12303  if (BalanceFrom == 0 && sentCOF[to].myHigherUpLock == 0){... */\n      iszero\n      tag_142\n      jumpi\n        /* \"contracts/Coffee.sol\":12201:12205  from */\n      dup5\n        /* \"contracts/Coffee.sol\":12176:12183  sentCOF */\n      0x38\n        /* \"contracts/Coffee.sol\":12176:12187  sentCOF[to] */\n      0x00\n        /* \"contracts/Coffee.sol\":12184:12186  to */\n      dup7\n        /* \"contracts/Coffee.sol\":12176:12187  sentCOF[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coffee.sol\":12176:12198  sentCOF[to].myHigherUp */\n      0x01\n      add\n      0x00\n        /* \"contracts/Coffee.sol\":12176:12205  sentCOF[to].myHigherUp = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":12247:12248  1 */\n      0x01\n        /* \"contracts/Coffee.sol\":12219:12226  sentCOF */\n      0x38\n        /* \"contracts/Coffee.sol\":12219:12230  sentCOF[to] */\n      0x00\n        /* \"contracts/Coffee.sol\":12227:12229  to */\n      dup7\n        /* \"contracts/Coffee.sol\":12219:12230  sentCOF[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coffee.sol\":12219:12243  sentCOF[to].totalPromote */\n      0x00\n      add\n      0x00\n        /* \"contracts/Coffee.sol\":12219:12248  sentCOF[to].totalPromote += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":12291:12292  1 */\n      0x01\n        /* \"contracts/Coffee.sol\":12262:12269  sentCOF */\n      0x38\n        /* \"contracts/Coffee.sol\":12262:12273  sentCOF[to] */\n      0x00\n        /* \"contracts/Coffee.sol\":12270:12272  to */\n      dup7\n        /* \"contracts/Coffee.sol\":12262:12273  sentCOF[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coffee.sol\":12262:12288  sentCOF[to].myHigherUpLock */\n      0x02\n      add\n        /* \"contracts/Coffee.sol\":12262:12292  sentCOF[to].myHigherUpLock = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":12106:12303  if (BalanceFrom == 0 && sentCOF[to].myHigherUpLock == 0){... */\n    tag_142:\n        /* \"contracts/Coffee.sol\":12333:12335  to */\n      dup4\n        /* \"contracts/Coffee.sol\":12318:12344  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coffee.sol\":12327:12331  from */\n      dup6\n        /* \"contracts/Coffee.sol\":12318:12344  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Coffee.sol\":12337:12343  amount */\n      dup6\n        /* \"contracts/Coffee.sol\":12318:12344  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Coffee.sol\":12355:12392  _afterTokenTransfer(from, to, amount) */\n      tag_143\n        /* \"contracts/Coffee.sol\":12375:12379  from */\n      dup6\n        /* \"contracts/Coffee.sol\":12381:12383  to */\n      dup6\n        /* \"contracts/Coffee.sol\":12385:12391  amount */\n      dup6\n        /* \"contracts/Coffee.sol\":12355:12374  _afterTokenTransfer */\n      tag_144\n        /* \"contracts/Coffee.sol\":12355:12392  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Coffee.sol\":11326:12399  function _transfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":12675:13216  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_97:\n        /* \"contracts/Coffee.sol\":12777:12778  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":12758:12779  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coffee.sol\":12758:12765  account */\n      dup3\n        /* \"contracts/Coffee.sol\":12758:12779  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Coffee.sol\":12750:12815  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/Coffee.sol\":12826:12875  _beforeTokenTransfer(address(0), account, amount) */\n      tag_147\n        /* \"contracts/Coffee.sol\":12855:12856  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":12859:12866  account */\n      dup4\n        /* \"contracts/Coffee.sol\":12868:12874  amount */\n      dup4\n        /* \"contracts/Coffee.sol\":12826:12846  _beforeTokenTransfer */\n      tag_138\n        /* \"contracts/Coffee.sol\":12826:12875  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/Coffee.sol\":12902:12908  amount */\n      dup1\n        /* \"contracts/Coffee.sol\":12886:12898  _totalSupply */\n      0x35\n      0x00\n        /* \"contracts/Coffee.sol\":12886:12908  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":13079:13085  amount */\n      dup1\n        /* \"contracts/Coffee.sol\":13057:13066  _balances */\n      0x33\n        /* \"contracts/Coffee.sol\":13057:13075  _balances[account] */\n      0x00\n        /* \"contracts/Coffee.sol\":13067:13074  account */\n      dup5\n        /* \"contracts/Coffee.sol\":13057:13075  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Coffee.sol\":13057:13085  _balances[account] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coffee.sol\":13134:13141  account */\n      dup2\n        /* \"contracts/Coffee.sol\":13113:13150  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coffee.sol\":13130:13131  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":13113:13150  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Coffee.sol\":13143:13149  amount */\n      dup4\n        /* \"contracts/Coffee.sol\":13113:13150  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Coffee.sol\":13161:13209  _afterTokenTransfer(address(0), account, amount) */\n      tag_148\n        /* \"contracts/Coffee.sol\":13189:13190  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":13193:13200  account */\n      dup4\n        /* \"contracts/Coffee.sol\":13202:13208  amount */\n      dup4\n        /* \"contracts/Coffee.sol\":13161:13180  _afterTokenTransfer */\n      tag_144\n        /* \"contracts/Coffee.sol\":13161:13209  _afterTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/Coffee.sol\":12675:13216  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":3687:4185  function isConstructor() private view returns (bool) {... */\n    tag_102:\n        /* \"contracts/Coffee.sol\":3734:3738  bool */\n      0x00\n        /* \"contracts/Coffee.sol\":4075:4087  address self */\n      dup1\n        /* \"contracts/Coffee.sol\":4098:4102  this */\n      address\n        /* \"contracts/Coffee.sol\":4075:4103  address self = address(this) */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":4109:4119  uint256 cs */\n      0x00\n        /* \"contracts/Coffee.sol\":4154:4158  self */\n      dup2\n        /* \"contracts/Coffee.sol\":4142:4159  extcodesize(self) */\n      extcodesize\n        /* \"contracts/Coffee.sol\":4136:4159  cs := extcodesize(self) */\n      swap1\n      pop\n        /* \"contracts/Coffee.sol\":4179:4180  0 */\n      0x00\n        /* \"contracts/Coffee.sol\":4173:4175  cs */\n      dup2\n        /* \"contracts/Coffee.sol\":4173:4180  cs == 0 */\n      eq\n        /* \"contracts/Coffee.sol\":4166:4180  return cs == 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Coffee.sol\":3687:4185  function isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Coffee.sol\":16306:16427  function _beforeTokenTransfer(... */\n    tag_138:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coffee.sol\":17015:17135  function _afterTokenTransfer(... */\n    tag_144:\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_108:\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_153\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_152)\n    tag_153:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_152\n      jumpi\n      swap2\n      dup3\n      add\n    tag_154:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_155\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_154)\n    tag_155:\n    tag_152:\n      pop\n      swap1\n      pop\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      pop\n      swap1\n      jump\t// out\n    tag_157:\n    tag_158:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_158)\n    tag_159:\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4 436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220db95788ac56b361d270d4e5e11f2547df96487aef6b527afe9cf01b2ee18125a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061175b806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb1461052e578063b954796d14610592578063dd62ed3e1461060e578063f05df5e21461068657610100565b806370a08231146103e55780638129fc1c1461043d57806395d89b4114610447578063a457c2d7146104ca57610100565b806323b872dd116100d357806323b872dd14610278578063313ce567146102fc578063395093511461031d57806340c10f191461038157610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ec5780631f5ed1b21461020a575b600080fd5b61010d6106de565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610780565b60405180821515815260200191505060405180910390f35b6101f46107a3565b6040518082815260200191505060405180910390f35b61024c6004803603602081101561022057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ad565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102e46004803603606081101561028e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610819565b60405180821515815260200191505060405180910390f35b610304610848565b604051808260ff16815260200191505060405180910390f35b6103696004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610851565b60405180821515815260200191505060405180910390f35b6103cd6004803603604081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061087f565b60405180821515815260200191505060405180910390f35b610427600480360360208110156103fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610895565b6040518082815260200191505060405180910390f35b6104456108de565b005b61044f610a74565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561048f578082015181840152602081019050610474565b50505050905090810190601f1680156104bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610516600480360360408110156104e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b16565b60405180821515815260200191505060405180910390f35b61057a6004803603604081101561054457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ba3565b60405180821515815260200191505060405180910390f35b6105d4600480360360208110156105a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bc6565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b6106706004803603604081101561062457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c10565b6040518082815260200191505060405180910390f35b6106c86004803603602081101561069c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c97565b6040518082815260200191505060405180910390f35b606060368054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107765780601f1061074b57610100808354040283529160200191610776565b820191906000526020600020905b81548152906001019060200180831161075957829003601f168201915b5050505050905090565b60008061078b610ce3565b9050610798818585610ceb565b600191505092915050565b6000603554905090565b6000603860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610824610ce3565b9050610831858285610ee2565b61083c858585610fa1565b60019150509392505050565b60006012905090565b60008061085c610ce3565b905061087481858561086e8589610c10565b01610ceb565b600191505092915050565b600061088b83836113de565b6001905092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff16806108fd57506108fc611560565b5b80610913575060008054906101000a900460ff16155b610968576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061168a602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156109b8576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6040518060400160405280600681526020017f636f66666565000000000000000000000000000000000000000000000000000081525060369080519060200190610a03929190611581565b506040518060400160405280600381526020017f434f46000000000000000000000000000000000000000000000000000000000081525060379080519060200190610a4f929190611581565b508015610a715760008060016101000a81548160ff0219169083151502179055505b50565b606060378054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b0c5780601f10610ae157610100808354040283529160200191610b0c565b820191906000526020600020905b815481529060010190602001808311610aef57829003601f168201915b5050505050905090565b600080610b21610ce3565b90506000610b2f8286610c10565b905083811015610b8a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117016025913960400191505060405180910390fd5b610b978286868403610ceb565b60019250505092915050565b600080610bae610ce3565b9050610bbb818585610fa1565b600191505092915050565b60386020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000603860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d71576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806116dd6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806116426022913960400191505060405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000610eee8484610c10565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f9b5781811015610f8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000081525060200191505060405180910390fd5b610f9a8484848403610ceb565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611027576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806116b86025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061161f6023913960400191505060405180910390fd5b6110b8838383611577565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611155576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806116646026913960400191505060405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060006111f384610895565b905060008114801561124757506000603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154145b156113675784603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055506001603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a36113d785858561157c565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61148d60008383611577565b8060356000828254019250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a361155c6000838361157c565b5050565b6000803090506000813b9050600081149250505090565b505050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106115c257805160ff19168380011785556115f0565b828001600101855582156115f0579182015b828111156115ef5782518255916020019190600101906115d4565b5b5090506115fd9190611601565b5090565b5b8082111561161a576000816000905550600101611602565b509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220db95788ac56b361d270d4e5e11f2547df96487aef6b527afe9cf01b2ee18125a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xB954796D EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xF05DF5E2 EQ PUSH2 0x686 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4CA JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x381 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x1F5ED1B2 EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x445 PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x48F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x474 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x516 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x670 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x776 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x74B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x776 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x759 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x78B PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x798 DUP2 DUP6 DUP6 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x38 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x824 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x831 DUP6 DUP3 DUP6 PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x83C DUP6 DUP6 DUP6 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x85C PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x874 DUP2 DUP6 DUP6 PUSH2 0x86E DUP6 DUP10 PUSH2 0xC10 JUMP JUMPDEST ADD PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88B DUP4 DUP4 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x8FD JUMPI POP PUSH2 0x8FC PUSH2 0x1560 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x913 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x968 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x168A PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x9B8 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x636F666665650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x36 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA03 SWAP3 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434F460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x37 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA4F SWAP3 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xA71 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB21 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB2F DUP3 DUP7 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1701 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB97 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBAE PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH2 0xBBB DUP2 DUP6 DUP6 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x38 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x38 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16DD PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1642 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP5 DUP5 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xF9B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xCEB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1027 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16B8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x161F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B8 DUP4 DUP4 DUP4 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1664 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x11F3 DUP5 PUSH2 0x895 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ DUP1 ISZERO PUSH2 0x1247 JUMPI POP PUSH1 0x0 PUSH1 0x38 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1367 JUMPI DUP5 PUSH1 0x38 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x38 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x38 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x13D7 DUP6 DUP6 DUP6 PUSH2 0x157C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148D PUSH1 0x0 DUP4 DUP4 PUSH2 0x1577 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x155C PUSH1 0x0 DUP4 DUP4 PUSH2 0x157C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x15C2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x15F0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x15F0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x15EF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x15D4 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x15FD SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x161A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1602 JUMP JUMPDEST POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E6365436F6E74 PUSH19 0x61637420696E7374616E63652068617320616C PUSH19 0x65616479206265656E20696E697469616C697A PUSH6 0x644552433230 GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220DB95 PUSH25 0x8AC56B361D270D4E5E11F2547DF96487AEF6B527AFE9CF01B2 0xEE XOR SLT GAS PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4701:12436:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb1461052e578063b954796d14610592578063dd62ed3e1461060e578063f05df5e21461068657610100565b806370a08231146103e55780638129fc1c1461043d57806395d89b4114610447578063a457c2d7146104ca57610100565b806323b872dd116100d357806323b872dd14610278578063313ce567146102fc578063395093511461031d57806340c10f191461038157610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ec5780631f5ed1b21461020a575b600080fd5b61010d6106de565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610780565b60405180821515815260200191505060405180910390f35b6101f46107a3565b6040518082815260200191505060405180910390f35b61024c6004803603602081101561022057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ad565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102e46004803603606081101561028e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610819565b60405180821515815260200191505060405180910390f35b610304610848565b604051808260ff16815260200191505060405180910390f35b6103696004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610851565b60405180821515815260200191505060405180910390f35b6103cd6004803603604081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061087f565b60405180821515815260200191505060405180910390f35b610427600480360360208110156103fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610895565b6040518082815260200191505060405180910390f35b6104456108de565b005b61044f610a74565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561048f578082015181840152602081019050610474565b50505050905090810190601f1680156104bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610516600480360360408110156104e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b16565b60405180821515815260200191505060405180910390f35b61057a6004803603604081101561054457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ba3565b60405180821515815260200191505060405180910390f35b6105d4600480360360208110156105a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bc6565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b6106706004803603604081101561062457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c10565b6040518082815260200191505060405180910390f35b6106c86004803603602081101561069c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c97565b6040518082815260200191505060405180910390f35b606060368054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107765780601f1061074b57610100808354040283529160200191610776565b820191906000526020600020905b81548152906001019060200180831161075957829003601f168201915b5050505050905090565b60008061078b610ce3565b9050610798818585610ceb565b600191505092915050565b6000603554905090565b6000603860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610824610ce3565b9050610831858285610ee2565b61083c858585610fa1565b60019150509392505050565b60006012905090565b60008061085c610ce3565b905061087481858561086e8589610c10565b01610ceb565b600191505092915050565b600061088b83836113de565b6001905092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff16806108fd57506108fc611560565b5b80610913575060008054906101000a900460ff16155b610968576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061168a602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156109b8576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6040518060400160405280600681526020017f636f66666565000000000000000000000000000000000000000000000000000081525060369080519060200190610a03929190611581565b506040518060400160405280600381526020017f434f46000000000000000000000000000000000000000000000000000000000081525060379080519060200190610a4f929190611581565b508015610a715760008060016101000a81548160ff0219169083151502179055505b50565b606060378054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b0c5780601f10610ae157610100808354040283529160200191610b0c565b820191906000526020600020905b815481529060010190602001808311610aef57829003601f168201915b5050505050905090565b600080610b21610ce3565b90506000610b2f8286610c10565b905083811015610b8a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117016025913960400191505060405180910390fd5b610b978286868403610ceb565b60019250505092915050565b600080610bae610ce3565b9050610bbb818585610fa1565b600191505092915050565b60386020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000603860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d71576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806116dd6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806116426022913960400191505060405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000610eee8484610c10565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f9b5781811015610f8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000081525060200191505060405180910390fd5b610f9a8484848403610ceb565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611027576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806116b86025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061161f6023913960400191505060405180910390fd5b6110b8838383611577565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611155576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806116646026913960400191505060405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060006111f384610895565b905060008114801561124757506000603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154145b156113675784603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055506001603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a36113d785858561157c565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61148d60008383611577565b8060356000828254019250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a361155c6000838361157c565b5050565b6000803090506000813b9050600081149250505090565b505050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106115c257805160ff19168380011785556115f0565b828001600101855582156115f0579182015b828111156115ef5782518255916020019190600101906115d4565b5b5090506115fd9190611601565b5090565b5b8082111561161a576000816000905550600101611602565b509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220db95788ac56b361d270d4e5e11f2547df96487aef6b527afe9cf01b2ee18125a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xB954796D EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xF05DF5E2 EQ PUSH2 0x686 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4CA JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x381 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x1F5ED1B2 EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x445 PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x48F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x474 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x516 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x670 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x776 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x74B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x776 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x759 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x78B PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x798 DUP2 DUP6 DUP6 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x38 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x824 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x831 DUP6 DUP3 DUP6 PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x83C DUP6 DUP6 DUP6 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x85C PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x874 DUP2 DUP6 DUP6 PUSH2 0x86E DUP6 DUP10 PUSH2 0xC10 JUMP JUMPDEST ADD PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88B DUP4 DUP4 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x8FD JUMPI POP PUSH2 0x8FC PUSH2 0x1560 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x913 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x968 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x168A PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x9B8 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x636F666665650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x36 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA03 SWAP3 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434F460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x37 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA4F SWAP3 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xA71 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB21 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB2F DUP3 DUP7 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1701 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB97 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBAE PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH2 0xBBB DUP2 DUP6 DUP6 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x38 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x38 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16DD PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1642 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP5 DUP5 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xF9B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xCEB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1027 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16B8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x161F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B8 DUP4 DUP4 DUP4 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1664 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x11F3 DUP5 PUSH2 0x895 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ DUP1 ISZERO PUSH2 0x1247 JUMPI POP PUSH1 0x0 PUSH1 0x38 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1367 JUMPI DUP5 PUSH1 0x38 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x38 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x38 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x13D7 DUP6 DUP6 DUP6 PUSH2 0x157C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148D PUSH1 0x0 DUP4 DUP4 PUSH2 0x1577 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x155C PUSH1 0x0 DUP4 DUP4 PUSH2 0x157C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x15C2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x15F0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x15F0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x15EF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x15D4 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x15FD SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x161A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1602 JUMP JUMPDEST POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E6365436F6E74 PUSH19 0x61637420696E7374616E63652068617320616C PUSH19 0x65616479206265656E20696E697469616C697A PUSH6 0x644552433230 GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220DB95 PUSH25 0x8AC56B361D270D4E5E11F2547DF96487AEF6B527AFE9CF01B2 0xEE XOR SLT GAS PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4701:12436:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5861:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8278:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6949:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5678:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9037:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6798:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9718:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7243:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7113:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5453:98;;;:::i;:::-;;6072:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10439:433;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7574:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5101:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7821:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5556:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5861:98;5915:13;5947:5;5940:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5861:98;:::o;8278:197::-;8361:4;8377:13;8393:12;:10;:12::i;:::-;8377:28;;8415:32;8424:5;8431:7;8440:6;8415:8;:32::i;:::-;8464:4;8457:11;;;8278:197;;;;:::o;6949:106::-;7010:7;7036:12;;7029:19;;6949:106;:::o;5678:119::-;5740:7;5765;:14;5773:5;5765:14;;;;;;;;;;;;;;;:25;;;;;;;;;;;;5758:32;;5678:119;;;:::o;9037:286::-;9164:4;9180:15;9198:12;:10;:12::i;:::-;9180:30;;9220:38;9236:4;9242:7;9251:6;9220:15;:38::i;:::-;9268:27;9278:4;9284:2;9288:6;9268:9;:27::i;:::-;9312:4;9305:11;;;9037:286;;;;;:::o;6798:91::-;6856:5;6880:2;6873:9;;6798:91;:::o;9718:234::-;9806:4;9822:13;9838:12;:10;:12::i;:::-;9822:28;;9860:64;9869:5;9876:7;9913:10;9885:25;9895:5;9902:7;9885:9;:25::i;:::-;:38;9860:8;:64::i;:::-;9941:4;9934:11;;;9718:234;;;;:::o;7243:136::-;7311:4;7327:24;7333:8;7343:7;7327:5;:24::i;:::-;7368:4;7361:11;;7243:136;;;;:::o;7113:125::-;7187:7;7213:9;:18;7223:7;7213:18;;;;;;;;;;;;;;;;7206:25;;7113:125;;;:::o;5453:98::-;3302:12;;;;;;;;;;;:31;;;;3318:15;:13;:15::i;:::-;3302:31;:47;;;;3338:11;;;;;;;;;;3337:12;3302:47;3294:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3407:19;3430:12;;;;;;;;;;;3429:13;3407:35;;3452:14;3448:80;;;3491:4;3476:12;;:19;;;;;;;;;;;;;;;;;;3517:4;3503:11;;:18;;;;;;;;;;;;;;;;;;3448:80;5503:16:::1;;;;;;;;;;;;;;;;::::0;:5:::1;:16;;;;;;;;;;;;:::i;:::-;;5529:15;;;;;;;;;;;;;;;;::::0;:7:::1;:15;;;;;;;;;;;;:::i;:::-;;3546:14:::0;3542:55;;;3585:5;3570:12;;:20;;;;;;;;;;;;;;;;;;3542:55;5453:98;:::o;6072:102::-;6128:13;6160:7;6153:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6072:102;:::o;10439:433::-;10532:4;10548:13;10564:12;:10;:12::i;:::-;10548:28;;10586:24;10613:25;10623:5;10630:7;10613:9;:25::i;:::-;10586:52;;10676:15;10656:16;:35;;10648:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10770:60;10779:5;10786:7;10814:15;10795:16;:34;10770:8;:60::i;:::-;10861:4;10854:11;;;;10439:433;;;;:::o;7574:189::-;7653:4;7669:13;7685:12;:10;:12::i;:::-;7669:28;;7707;7717:5;7724:2;7728:6;7707:9;:28::i;:::-;7752:4;7745:11;;;7574:189;;;;:::o;5101:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7821:149::-;7910:7;7936:11;:18;7948:5;7936:18;;;;;;;;;;;;;;;:27;7955:7;7936:27;;;;;;;;;;;;;;;;7929:34;;7821:149;;;;:::o;5556:117::-;5617:4;5639:7;:14;5647:5;5639:14;;;;;;;;;;;;;;;:27;;;5632:34;;5556:117;;;:::o;2730:96::-;2783:7;2809:10;2802:17;;2730:96;:::o;14624:370::-;14772:1;14755:19;;:5;:19;;;;14747:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14852:1;14833:21;;:7;:21;;;;14825:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14934:6;14904:11;:18;14916:5;14904:18;;;;;;;;;;;;;;;:27;14923:7;14904:27;;;;;;;;;;;;;;;:36;;;;14971:7;14955:32;;14964:5;14955:32;;;14980:6;14955:32;;;;;;;;;;;;;;;;;;14624:370;;;:::o;15275:447::-;15405:24;15432:25;15442:5;15449:7;15432:9;:25::i;:::-;15405:52;;15491:17;15471:16;:37;15467:249;;15552:6;15532:16;:26;;15524:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15637:51;15646:5;15653:7;15681:6;15662:16;:25;15637:8;:51::i;:::-;15467:249;15275:447;;;;:::o;11326:1073::-;11468:1;11452:18;;:4;:18;;;;11444:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11544:1;11530:16;;:2;:16;;;;11522:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11597:38;11618:4;11624:2;11628:6;11597:20;:38::i;:::-;11646:19;11668:9;:15;11678:4;11668:15;;;;;;;;;;;;;;;;11646:37;;11716:6;11701:11;:21;;11693:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11834:6;11820:11;:20;11802:9;:15;11812:4;11802:15;;;;;;;;;;;;;;;:38;;;;12034:6;12017:9;:13;12027:2;12017:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;12064:16;12083:13;12093:2;12083:9;:13::i;:::-;12064:32;;12125:1;12110:11;:16;:51;;;;;12160:1;12130:7;:11;12138:2;12130:11;;;;;;;;;;;;;;;:26;;;:31;12110:51;12106:197;;;12201:4;12176:7;:11;12184:2;12176:11;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;12247:1;12219:7;:11;12227:2;12219:11;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;12291:1;12262:7;:11;12270:2;12262:11;;;;;;;;;;;;;;;:26;;:30;;;;12106:197;12333:2;12318:26;;12327:4;12318:26;;;12337:6;12318:26;;;;;;;;;;;;;;;;;;12355:37;12375:4;12381:2;12385:6;12355:19;:37::i;:::-;11326:1073;;;;;:::o;12675:541::-;12777:1;12758:21;;:7;:21;;;;12750:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12826:49;12855:1;12859:7;12868:6;12826:20;:49::i;:::-;12902:6;12886:12;;:22;;;;;;;;;;;13079:6;13057:9;:18;13067:7;13057:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;13134:7;13113:37;;13130:1;13113:37;;;13143:6;13113:37;;;;;;;;;;;;;;;;;;13161:48;13189:1;13193:7;13202:6;13161:19;:48::i;:::-;12675:541;;:::o;3687:498::-;3734:4;4075:12;4098:4;4075:28;;4109:10;4154:4;4142:17;4136:23;;4179:1;4173:2;:7;4166:14;;;;3687:498;:::o;16306:121::-;;;;:::o;17015:120::-;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1195800",
								"executionCost": "1241",
								"totalCost": "1197041"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1219",
								"decimals()": "264",
								"decreaseAllowance(address,uint256)": "infinite",
								"getSentCOFHigherUp(address)": "1334",
								"getSentCOFPromote(address)": "1290",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize()": "infinite",
								"mint(address,uint256)": "44165",
								"name()": "infinite",
								"sentCOF(address)": "2933",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4701,
									"end": 17137,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4701,
									"end": 17137,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db95788ac56b361d270d4e5e11f2547df96487aef6b527afe9cf01b2ee18125a64736f6c634300060c0033",
									".code": [
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "B954796D"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "F05DF5E2"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "8129FC1C"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "1F5ED1B2"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 17137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5928,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5947,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5959,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8377,
											"end": 8390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8393,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8393,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8393,
											"end": 8405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8393,
											"end": 8405,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8393,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8424,
											"end": 8429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8431,
											"end": 8438,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8415,
											"end": 8447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8415,
											"end": 8447,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8415,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8464,
											"end": 8468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8457,
											"end": 8468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8475,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7010,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 7055,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5740,
											"end": 5747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5765,
											"end": 5772,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5765,
											"end": 5779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5758,
											"end": 5790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5758,
											"end": 5790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5797,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9198,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9198,
											"end": 9210,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9198,
											"end": 9210,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9198,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9180,
											"end": 9210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9180,
											"end": 9210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9220,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9236,
											"end": 9240,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9251,
											"end": 9257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9220,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9220,
											"end": 9258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9220,
											"end": 9258,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9220,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9268,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9278,
											"end": 9282,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9286,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9268,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9268,
											"end": 9295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9268,
											"end": 9295,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9268,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9305,
											"end": 9316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9305,
											"end": 9316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9305,
											"end": 9316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9323,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6856,
											"end": 6861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6882,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6873,
											"end": 6882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6873,
											"end": 6882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6889,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9806,
											"end": 9810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9822,
											"end": 9835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9838,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9822,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9822,
											"end": 9850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9869,
											"end": 9874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9883,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9913,
											"end": 9923,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9895,
											"end": 9900,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9902,
											"end": 9909,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9885,
											"end": 9910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9885,
											"end": 9910,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9885,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 9923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9860,
											"end": 9924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9860,
											"end": 9924,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9860,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9934,
											"end": 9945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9934,
											"end": 9945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9934,
											"end": 9945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9952,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7311,
											"end": 7315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7333,
											"end": 7341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7343,
											"end": 7350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 7327,
											"end": 7351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7327,
											"end": 7351,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7327,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7361,
											"end": 7372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7379,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7187,
											"end": 7194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7222,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7223,
											"end": 7230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7238,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3318,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3349,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3302,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH data",
											"source": 0,
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3294,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3448,
											"end": 3528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3448,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3448,
											"end": 3528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3517,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3503,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3448,
											"end": 3528,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3448,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "636F666665650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "434F460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5536,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3542,
											"end": 3597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3597,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3542,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5551,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6141,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6160,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6153,
											"end": 6167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6174,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10532,
											"end": 10536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10548,
											"end": 10561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10564,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 10564,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10564,
											"end": 10576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10564,
											"end": 10576,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 10564,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10548,
											"end": 10576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10548,
											"end": 10576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10613,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10623,
											"end": 10628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10630,
											"end": 10637,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10613,
											"end": 10638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10613,
											"end": 10638,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10613,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10676,
											"end": 10691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10656,
											"end": 10672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10656,
											"end": 10691,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10656,
											"end": 10691,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH data",
											"source": 0,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10648,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10779,
											"end": 10784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10786,
											"end": 10793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10795,
											"end": 10811,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10795,
											"end": 10829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10770,
											"end": 10830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10770,
											"end": 10830,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10770,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10854,
											"end": 10865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10872,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7669,
											"end": 7682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7685,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7685,
											"end": 7697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7685,
											"end": 7697,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7685,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7707,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7724,
											"end": 7726,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7707,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7707,
											"end": 7735,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7707,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7707,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7756,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7745,
											"end": 7756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7763,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5142,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7910,
											"end": 7917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 7947,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7953,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 7962,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7970,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5646,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5632,
											"end": 5666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5632,
											"end": 5666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5673,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2730,
											"end": 2826,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2730,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2819,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2826,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14624,
											"end": 14994,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14624,
											"end": 14994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14772,
											"end": 14773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14755,
											"end": 14774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14755,
											"end": 14774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14755,
											"end": 14760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14755,
											"end": 14774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14755,
											"end": 14774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14755,
											"end": 14774,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14755,
											"end": 14774,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH data",
											"source": 0,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14747,
											"end": 14815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 14853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14833,
											"end": 14854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14833,
											"end": 14854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14833,
											"end": 14854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14854,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH data",
											"source": 0,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 14825,
											"end": 14893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14915,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14916,
											"end": 14921,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14923,
											"end": 14930,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14904,
											"end": 14931,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14940,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14964,
											"end": 14969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14980,
											"end": 14986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14624,
											"end": 14994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14624,
											"end": 14994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14624,
											"end": 14994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14624,
											"end": 14994,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15275,
											"end": 15722,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15275,
											"end": 15722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15405,
											"end": 15429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15432,
											"end": 15457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 15442,
											"end": 15447,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15456,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15432,
											"end": 15441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15432,
											"end": 15457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15432,
											"end": 15457,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 15432,
											"end": 15457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15405,
											"end": 15457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15405,
											"end": 15457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15491,
											"end": 15508,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15471,
											"end": 15487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15471,
											"end": 15508,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 15467,
											"end": 15716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15558,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 15524,
											"end": 15592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15637,
											"end": 15688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 15646,
											"end": 15651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15653,
											"end": 15660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15681,
											"end": 15687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15662,
											"end": 15678,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15662,
											"end": 15687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15637,
											"end": 15645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 15637,
											"end": 15688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15637,
											"end": 15688,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 15637,
											"end": 15688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15716,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 15467,
											"end": 15716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15275,
											"end": 15722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15275,
											"end": 15722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15275,
											"end": 15722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15275,
											"end": 15722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15275,
											"end": 15722,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11326,
											"end": 12399,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11326,
											"end": 12399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11468,
											"end": 11469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11452,
											"end": 11470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11452,
											"end": 11470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11452,
											"end": 11456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11452,
											"end": 11470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11452,
											"end": 11470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11452,
											"end": 11470,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11452,
											"end": 11470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH data",
											"source": 0,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 11444,
											"end": 11512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11544,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11530,
											"end": 11546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11530,
											"end": 11546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11530,
											"end": 11532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11530,
											"end": 11546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11530,
											"end": 11546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11530,
											"end": 11546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11530,
											"end": 11546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH data",
											"source": 0,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 11522,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11597,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 11618,
											"end": 11622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11624,
											"end": 11626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11628,
											"end": 11634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11597,
											"end": 11635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11597,
											"end": 11635,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 11597,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11646,
											"end": 11665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11668,
											"end": 11677,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11678,
											"end": 11682,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11646,
											"end": 11683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11646,
											"end": 11683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11716,
											"end": 11722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11701,
											"end": 11712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11701,
											"end": 11722,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11701,
											"end": 11722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH data",
											"source": 0,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11693,
											"end": 11765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11834,
											"end": 11840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11811,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11812,
											"end": 11816,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11840,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12026,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12027,
											"end": 12029,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12083,
											"end": 12096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12093,
											"end": 12095,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12083,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 12083,
											"end": 12096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12083,
											"end": 12096,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12083,
											"end": 12096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12125,
											"end": 12126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12110,
											"end": 12121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12160,
											"end": 12161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12130,
											"end": 12137,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12138,
											"end": 12140,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12130,
											"end": 12141,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12156,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12130,
											"end": 12156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12161,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12106,
											"end": 12303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12106,
											"end": 12303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12106,
											"end": 12303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12205,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12183,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12184,
											"end": 12186,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12198,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12176,
											"end": 12198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12176,
											"end": 12205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12248,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12219,
											"end": 12226,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12227,
											"end": 12229,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12292,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12262,
											"end": 12269,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12270,
											"end": 12272,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12262,
											"end": 12273,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12288,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12262,
											"end": 12288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12292,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12106,
											"end": 12303,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12106,
											"end": 12303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12327,
											"end": 12331,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12337,
											"end": 12343,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12355,
											"end": 12392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12375,
											"end": 12379,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12381,
											"end": 12383,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12385,
											"end": 12391,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12355,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12355,
											"end": 12392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12355,
											"end": 12392,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12355,
											"end": 12392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12399,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12675,
											"end": 13216,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12675,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12777,
											"end": 12778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12758,
											"end": 12779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12758,
											"end": 12779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12758,
											"end": 12765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12758,
											"end": 12779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12758,
											"end": 12779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12758,
											"end": 12779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12758,
											"end": 12779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12750,
											"end": 12815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12855,
											"end": 12856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12859,
											"end": 12866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12868,
											"end": 12874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12826,
											"end": 12875,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12826,
											"end": 12875,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12826,
											"end": 12875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12898,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 12886,
											"end": 12898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13079,
											"end": 13085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13066,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13067,
											"end": 13074,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13134,
											"end": 13141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13143,
											"end": 13149,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13150,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13189,
											"end": 13190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13193,
											"end": 13200,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13161,
											"end": 13209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13161,
											"end": 13209,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13161,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 13216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 13216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 13216,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3687,
											"end": 4185,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3687,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4102,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4159,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4180,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 4185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 4185,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16306,
											"end": 16427,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 16306,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16427,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17015,
											"end": 17135,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 17015,
											"end": 17135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17135,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "108"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "153"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "153"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "154"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "155"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "154"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "155"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "156"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "157"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "156"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "157"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "159"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "159"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getSentCOFHigherUp(address)": "1f5ed1b2",
							"getSentCOFPromote(address)": "f05df5e2",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize()": "8129fc1c",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"sentCOF(address)": "b954796d",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getSentCOFHigherUp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getSentCOFPromote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sentCOF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPromote\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"myHigherUp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"myHigherUpLock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize()\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coffee.sol\":\"Coffee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coffee.sol\":{\"keccak256\":\"0xab8d9a393f0c529d2e6ed6fbb3cdcaa065ef4d6e942e92aa801c934fa0d045da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://414e1c0306787c696531b5778f00f7d507108cb7d7c79c945c8585e46382e335\",\"dweb:/ipfs/QmQe2S9J6PFfU759NLB8gHLNjPMoMpHrFMvHazQFpPwQh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 98,
								"contract": "contracts/Coffee.sol:Coffee",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 101,
								"contract": "contracts/Coffee.sol:Coffee",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 166,
								"contract": "contracts/Coffee.sol:Coffee",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 200,
								"contract": "contracts/Coffee.sol:Coffee",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 206,
								"contract": "contracts/Coffee.sol:Coffee",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 208,
								"contract": "contracts/Coffee.sol:Coffee",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 210,
								"contract": "contracts/Coffee.sol:Coffee",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 212,
								"contract": "contracts/Coffee.sol:Coffee",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 223,
								"contract": "contracts/Coffee.sol:Coffee",
								"label": "sentCOF",
								"offset": 0,
								"slot": "56",
								"type": "t_mapping(t_address,t_struct(UserInfo)219_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(UserInfo)219_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Coffee.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)219_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(UserInfo)219_storage": {
								"encoding": "inplace",
								"label": "struct Coffee.UserInfo",
								"members": [
									{
										"astId": 214,
										"contract": "contracts/Coffee.sol:Coffee",
										"label": "totalPromote",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 216,
										"contract": "contracts/Coffee.sol:Coffee",
										"label": "myHigherUp",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 218,
										"contract": "contracts/Coffee.sol:Coffee",
										"label": "myHigherUpLock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coffee.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coffee.sol\":{\"keccak256\":\"0xab8d9a393f0c529d2e6ed6fbb3cdcaa065ef4d6e942e92aa801c934fa0d045da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://414e1c0306787c696531b5778f00f7d507108cb7d7c79c945c8585e46382e335\",\"dweb:/ipfs/QmQe2S9J6PFfU759NLB8gHLNjPMoMpHrFMvHazQFpPwQh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coffee.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coffee.sol\":{\"keccak256\":\"0xab8d9a393f0c529d2e6ed6fbb3cdcaa065ef4d6e942e92aa801c934fa0d045da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://414e1c0306787c696531b5778f00f7d507108cb7d7c79c945c8585e46382e335\",\"dweb:/ipfs/QmQe2S9J6PFfU759NLB8gHLNjPMoMpHrFMvHazQFpPwQh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coffee.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coffee.sol\":{\"keccak256\":\"0xab8d9a393f0c529d2e6ed6fbb3cdcaa065ef4d6e942e92aa801c934fa0d045da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://414e1c0306787c696531b5778f00f7d507108cb7d7c79c945c8585e46382e335\",\"dweb:/ipfs/QmQe2S9J6PFfU759NLB8gHLNjPMoMpHrFMvHazQFpPwQh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Initializable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Coffee.sol\":2935:4292  contract Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Coffee.sol\":2935:4292  contract Initializable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f3a4d338f5adadbe49912b8034c4b27fb2005d4a95de9186defa5a7ec13d37df64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220f3a4d338f5adadbe49912b8034c4b27fb2005d4a95de9186defa5a7ec13d37df64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN LOG4 0xD3 CODESIZE CREATE2 0xAD 0xAD 0xBE 0x49 SWAP2 0x2B DUP1 CALLVALUE 0xC4 0xB2 PUSH32 0xB2005D4A95DE9186DEFA5A7EC13D37DF64736F6C634300060C00330000000000 ",
							"sourceMap": "2935:1357:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220f3a4d338f5adadbe49912b8034c4b27fb2005d4a95de9186defa5a7ec13d37df64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN LOG4 0xD3 CODESIZE CREATE2 0xAD 0xAD 0xBE 0x49 SWAP2 0x2B DUP1 CALLVALUE 0xC4 0xB2 PUSH32 0xB2005D4A95DE9186DEFA5A7EC13D37DF64736F6C634300060C00330000000000 ",
							"sourceMap": "2935:1357:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"isConstructor()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2935,
									"end": 4292,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3a4d338f5adadbe49912b8034c4b27fb2005d4a95de9186defa5a7ec13d37df64736f6c634300060c0033",
									".code": [
										{
											"begin": 2935,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2935,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 4292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 4292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 4292,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coffee.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coffee.sol\":{\"keccak256\":\"0xab8d9a393f0c529d2e6ed6fbb3cdcaa065ef4d6e942e92aa801c934fa0d045da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://414e1c0306787c696531b5778f00f7d507108cb7d7c79c945c8585e46382e335\",\"dweb:/ipfs/QmQe2S9J6PFfU759NLB8gHLNjPMoMpHrFMvHazQFpPwQh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 98,
								"contract": "contracts/Coffee.sol:Initializable",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 101,
								"contract": "contracts/Coffee.sol:Initializable",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 166,
								"contract": "contracts/Coffee.sol:Initializable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contracts/Coffee.sol:86:5: Warning: Function state mutability can be restricted to pure\n    function _msgData() internal view virtual returns (bytes calldata) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2931,
					"file": "contracts/Coffee.sol",
					"start": 2832
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Coffee.sol": {
				"ast": {
					"absolutePath": "contracts/Coffee.sol",
					"exportedSymbols": {
						"Coffee": [
							857
						],
						"Context": [
							95
						],
						"IERC20": [
							76
						],
						"IERC20Metadata": [
							188
						],
						"Initializable": [
							167
						]
					},
					"id": 858,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "155:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 10,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "333:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "355:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "375:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "332:57:0"
									},
									"src": "318:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "396:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 19,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "564:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "587:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "612:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "563:63:0"
									},
									"src": "549:78:0"
								},
								{
									"body": null,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "633:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "750:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "749:9:0"
									},
									"scope": 76,
									"src": "704:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "765:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "860:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "901:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "900:9:0"
									},
									"scope": 76,
									"src": "842:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "916:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "1141:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "1153:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1140:28:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "1187:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1187:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1186:6:0"
									},
									"scope": 76,
									"src": "1123:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1199:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "1487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "1502:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1486:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "1542:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1541:9:0"
									},
									"scope": 76,
									"src": "1468:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1557:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "2221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "2238:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2220:33:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "2272:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2272:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2271:6:0"
									},
									"scope": 76,
									"src": "2204:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2284:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2629:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2649:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2597:72:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2688:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 72,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2688:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2687:6:0"
									},
									"scope": 76,
									"src": "2576:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 858,
							"src": "132:2564:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 95,
							"linearizedBaseContracts": [
								95
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "2792:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 81,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "2809:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2809:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 80,
												"id": 83,
												"nodeType": "Return",
												"src": "2802:17:0"
											}
										]
									},
									"documentation": null,
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2749:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 85,
												"src": "2783:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2782:9:0"
									},
									"scope": 95,
									"src": "2730:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2899:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 90,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "2916:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2916:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 89,
												"id": 92,
												"nodeType": "Return",
												"src": "2909:15:0"
											}
										]
									},
									"documentation": null,
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2849:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 94,
												"src": "2883:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 87,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2883:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2882:16:0"
									},
									"scope": 95,
									"src": "2832:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 858,
							"src": "2698:235:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "2963:69:0",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 98,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 167,
									"src": "3035:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 97,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3035:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3064:87:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 101,
									"mutability": "mutable",
									"name": "initializing",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 167,
									"src": "3154:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 100,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3154:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "3288:313:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "3302:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 106,
																		"name": "isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "3318:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3318:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3302:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3337:12:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "3338:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3302:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3351:48:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															},
															"value": "Contract instance has already been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "3294:106:0"
											},
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 139,
														"src": "3407:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 115,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3407:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"argumentTypes": null,
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3429:13:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 117,
														"name": "initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "3430:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3407:35:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 120,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "3452:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 130,
												"nodeType": "IfStatement",
												"src": "3448:80:0",
												"trueBody": {
													"id": 129,
													"nodeType": "Block",
													"src": "3468:60:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 121,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "3476:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3491:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3476:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "3476:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 125,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "3503:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3517:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3503:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 128,
															"nodeType": "ExpressionStatement",
															"src": "3503:18:0"
														}
													]
												}
											},
											{
												"id": 131,
												"nodeType": "PlaceholderStatement",
												"src": "3534:1:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 132,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "3546:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 138,
												"nodeType": "IfStatement",
												"src": "3542:55:0",
												"trueBody": {
													"id": 137,
													"nodeType": "Block",
													"src": "3562:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 133,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "3570:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3585:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3570:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 136,
															"nodeType": "ExpressionStatement",
															"src": "3570:20:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3184:78:0",
										"text": " @dev Modifier to use in the initializer function of a contract."
									},
									"id": 140,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3285:2:0"
									},
									"src": "3265:336:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "3740:445:0",
										"statements": [
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"mutability": "mutable",
														"name": "self",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 161,
														"src": "4075:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 146,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4075:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 150,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -28,
															"src": "4098:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$167",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$167",
																"typeString": "contract Initializable"
															}
														],
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4090:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 148,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4090:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4090:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4075:28:0"
											},
											{
												"assignments": [
													154
												],
												"declarations": [
													{
														"constant": false,
														"id": 154,
														"mutability": "mutable",
														"name": "cs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 161,
														"src": "4109:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 153,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4109:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4109:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4134:27:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4136:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "4154:4:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "4142:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4142:17:0"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "4136:2:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 154,
														"isOffset": false,
														"isSlot": false,
														"src": "4136:2:0",
														"valueSize": 1
													},
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "4154:4:0",
														"valueSize": 1
													}
												],
												"id": 156,
												"nodeType": "InlineAssembly",
												"src": "4125:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 157,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "4173:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4179:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 145,
												"id": 160,
												"nodeType": "Return",
												"src": "4166:14:0"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3605:79:0",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConstructor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3709:2:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 162,
												"src": "3734:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3733:6:0"
									},
									"scope": 167,
									"src": "3687:498:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 166,
									"mutability": "mutable",
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 167,
									"src": "4260:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4260:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 165,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 164,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4268:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4260:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 858,
							"src": "2935:1357:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 168,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 76,
										"src": "4322:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									},
									"id": 169,
									"nodeType": "InheritanceSpecifier",
									"src": "4322:6:0"
								}
							],
							"contractDependencies": [
								76
							],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 188,
							"linearizedBaseContracts": [
								188,
								76
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4335:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:2:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 175,
												"src": "4433:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 172,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4433:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4432:15:0"
									},
									"scope": 188,
									"src": "4394:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "4454:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4530:2:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "4556:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4556:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4555:15:0"
									},
									"scope": 188,
									"src": "4515:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "4577:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4664:2:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 187,
												"src": "4690:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 184,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4690:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4689:7:0"
									},
									"scope": 188,
									"src": "4647:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 858,
							"src": "4294:405:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 189,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 167,
										"src": "4720:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$167",
											"typeString": "contract Initializable"
										}
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "4720:13:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 191,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 95,
										"src": "4734:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$95",
											"typeString": "contract Context"
										}
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "4734:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 193,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 76,
										"src": "4743:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "4743:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 195,
										"name": "IERC20Metadata",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 188,
										"src": "4751:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$188",
											"typeString": "contract IERC20Metadata"
										}
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "4751:14:0"
								}
							],
							"contractDependencies": [
								76,
								95,
								167,
								188
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 857,
							"linearizedBaseContracts": [
								857,
								188,
								76,
								95,
								167
							],
							"name": "Coffee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 200,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 857,
									"src": "4772:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 199,
										"keyType": {
											"id": 197,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4780:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4772:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 198,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4791:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 206,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 857,
									"src": "4824:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 205,
										"keyType": {
											"id": 201,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4832:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4824:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 204,
											"keyType": {
												"id": 202,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4851:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4843:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 203,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4862:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 208,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 857,
									"src": "4898:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 207,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4898:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 210,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 857,
									"src": "4933:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 209,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4933:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 212,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 857,
									"src": "4959:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 211,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4959:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"canonicalName": "Coffee.UserInfo",
									"id": 219,
									"members": [
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "totalPromote",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 219,
											"src": "5014:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 213,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5014:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 216,
											"mutability": "mutable",
											"name": "myHigherUp",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 219,
											"src": "5041:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 215,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5041:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 218,
											"mutability": "mutable",
											"name": "myHigherUpLock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 219,
											"src": "5069:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 217,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5069:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 857,
									"src": "4988:107:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b954796d",
									"id": 223,
									"mutability": "mutable",
									"name": "sentCOF",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 857,
									"src": "5101:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$219_storage_$",
										"typeString": "mapping(address => struct Coffee.UserInfo)"
									},
									"typeName": {
										"id": 222,
										"keyType": {
											"id": 220,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5109:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5101:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$219_storage_$",
											"typeString": "mapping(address => struct Coffee.UserInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 221,
											"name": "UserInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 219,
											"src": "5118:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$219_storage_ptr",
												"typeString": "struct Coffee.UserInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "5493:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 229,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "5503:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "636f66666565",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5511:8:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_698f4591e0589ae8861757a33bd349193d64331371ae5d047e0f91db989e8e35",
															"typeString": "literal_string \"coffee\""
														},
														"value": "coffee"
													},
													"src": "5503:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "5503:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 233,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "5529:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "434f46",
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5539:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7222939d163a63314d3c776bc4223934d208047722a41b2f885ffb762f81c64f",
															"typeString": "literal_string \"COF\""
														},
														"value": "COF"
													},
													"src": "5529:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "5529:15:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "5149:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"functionSelector": "8129fc1c",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 227,
											"modifierName": {
												"argumentTypes": null,
												"id": 226,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 140,
												"src": "5482:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5482:11:0"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5472:2:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:0:0"
									},
									"scope": 857,
									"src": "5453:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "5622:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 245,
															"name": "sentCOF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "5639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$219_storage_$",
																"typeString": "mapping(address => struct Coffee.UserInfo storage ref)"
															}
														},
														"id": 247,
														"indexExpression": {
															"argumentTypes": null,
															"id": 246,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "5647:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5639:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$219_storage",
															"typeString": "struct Coffee.UserInfo storage ref"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalPromote",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 214,
													"src": "5639:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 249,
												"nodeType": "Return",
												"src": "5632:34:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f05df5e2",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSentCOFPromote",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5582:15:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5617:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5617:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5616:6:0"
									},
									"scope": 857,
									"src": "5556:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "5748:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 258,
															"name": "sentCOF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "5765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$219_storage_$",
																"typeString": "mapping(address => struct Coffee.UserInfo storage ref)"
															}
														},
														"id": 260,
														"indexExpression": {
															"argumentTypes": null,
															"id": 259,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "5773:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5765:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$219_storage",
															"typeString": "struct Coffee.UserInfo storage ref"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "myHigherUp",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 216,
													"src": "5765:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 257,
												"id": 262,
												"nodeType": "Return",
												"src": "5758:32:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1f5ed1b2",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSentCOFHigherUp",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 264,
												"src": "5706:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5705:15:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 264,
												"src": "5740:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5739:9:0"
									},
									"scope": 857,
									"src": "5678:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										175
									],
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "5930:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 271,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 210,
													"src": "5947:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 270,
												"id": 272,
												"nodeType": "Return",
												"src": "5940:12:0"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "5802:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5897:8:0"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5874:2:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "5915:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5915:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5914:15:0"
									},
									"scope": 857,
									"src": "5861:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										181
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "6143:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 281,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 212,
													"src": "6160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 280,
												"id": 282,
												"nodeType": "Return",
												"src": "6153:14:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "5965:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 277,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6110:8:0"
									},
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6087:2:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "6128:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6128:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6127:15:0"
									},
									"scope": 857,
									"src": "6072:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										187
									],
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6863:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6880:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 290,
												"id": 292,
												"nodeType": "Return",
												"src": "6873:9:0"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "6180:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 287,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6838:8:0"
									},
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6815:2:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "6856:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 288,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6855:7:0"
									},
									"scope": 857,
									"src": "6798:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "7019:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "7036:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 300,
												"id": 302,
												"nodeType": "Return",
												"src": "7029:19:0"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "6895:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 297,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6992:8:0"
									},
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6969:2:0"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "7010:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7009:9:0"
									},
									"scope": 857,
									"src": "6949:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										33
									],
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7196:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 313,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "7213:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 315,
													"indexExpression": {
														"argumentTypes": null,
														"id": 314,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "7223:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7213:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 312,
												"id": 316,
												"nodeType": "Return",
												"src": "7206:25:0"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "7061:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 309,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7169:8:0"
									},
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 318,
												"src": "7132:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7131:17:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 318,
												"src": "7187:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7186:9:0"
									},
									"scope": 857,
									"src": "7113:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "7317:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 328,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "7333:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 329,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "7343:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "7327:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7327:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "7327:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7368:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 326,
												"id": 333,
												"nodeType": "Return",
												"src": "7361:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "40c10f19",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 335,
												"src": "7257:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 335,
												"src": "7274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7274:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7256:31:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 335,
												"src": "7311:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7311:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7310:6:0"
									},
									"scope": 857,
									"src": "7243:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										43
									],
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "7659:104:0",
										"statements": [
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 359,
														"src": "7669:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 346,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7669:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 348,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "7685:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7685:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7669:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 352,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "7717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 353,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "7724:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 354,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "7728:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 351,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "7707:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7707:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "7707:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7752:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 345,
												"id": 358,
												"nodeType": "Return",
												"src": "7745:11:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "7384:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 342,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7635:8:0"
									},
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 360,
												"src": "7592:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 360,
												"src": "7604:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7591:28:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 360,
												"src": "7653:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7653:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7652:6:0"
									},
									"scope": 857,
									"src": "7574:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										53
									],
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "7919:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 371,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "7936:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 373,
														"indexExpression": {
															"argumentTypes": null,
															"id": 372,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "7948:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 375,
													"indexExpression": {
														"argumentTypes": null,
														"id": 374,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "7955:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7936:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 370,
												"id": 376,
												"nodeType": "Return",
												"src": "7929:34:0"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "7769:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 367,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7892:8:0"
									},
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 378,
												"src": "7840:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 378,
												"src": "7855:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7839:32:0"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 378,
												"src": "7910:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7909:9:0"
									},
									"scope": 857,
									"src": "7821:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										63
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8367:108:0",
										"statements": [
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 402,
														"src": "8377:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 389,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8377:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 391,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "8393:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8393:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8377:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 395,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "8424:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 396,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "8431:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 397,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "8440:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 394,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "8415:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8415:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "8415:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8464:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 388,
												"id": 401,
												"nodeType": "Return",
												"src": "8457:11:0"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "7976:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 385,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8343:8:0"
									},
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "8295:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "8312:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8294:33:0"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "8361:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8361:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8360:6:0"
									},
									"scope": 857,
									"src": "8278:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										75
									],
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "9170:153:0",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 435,
														"src": "9180:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 416,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9180:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "9198:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9198:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9180:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 422,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9236:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 423,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "9242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 424,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "9251:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "9220:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9220:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "9220:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 428,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9278:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 429,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9284:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 430,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "9288:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 427,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "9268:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9268:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "9268:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9312:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 415,
												"id": 434,
												"nodeType": "Return",
												"src": "9305:11:0"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "8481:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 412,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9146:8:0"
									},
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "9068:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "9090:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "9110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9058:72:0"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "9164:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9164:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9163:6:0"
									},
									"scope": 857,
									"src": "9037:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "9812:140:0",
										"statements": [
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 464,
														"src": "9822:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 446,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9822:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 448,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "9838:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9838:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9822:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 452,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "9869:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 453,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "9876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 455,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "9895:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 456,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "9902:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 454,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "9885:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9885:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 458,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "9913:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9885:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "9860:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9860:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "9860:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9941:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 445,
												"id": 463,
												"nodeType": "Return",
												"src": "9934:11:0"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "9329:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "9745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "9762:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9744:37:0"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "9806:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9806:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9805:6:0"
									},
									"scope": 857,
									"src": "9718:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "10538:334:0",
										"statements": [
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 504,
														"src": "10548:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 475,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10548:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 477,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "10564:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10564:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10548:28:0"
											},
											{
												"assignments": [
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 504,
														"src": "10586:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 480,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 483,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "10623:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 484,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "10630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 482,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "10613:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10613:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10586:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 488,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "10656:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 489,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "10676:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10656:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10693:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10648:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10648:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10648:85:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 495,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "10779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 496,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "10786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 497,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "10795:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 498,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "10814:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10795:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "10770:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10770:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "10770:60:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10861:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 474,
												"id": 503,
												"nodeType": "Return",
												"src": "10854:11:0"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "9958:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "10466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "10483:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10465:42:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "10532:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10532:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10531:6:0"
									},
									"scope": 857,
									"src": "10439:433:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "11434:965:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 516,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "11452:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11468:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11460:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 517,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11460:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11460:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11452:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11472:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11444:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11444:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "11444:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 526,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "11530:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11544:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11536:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 527,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11536:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11536:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11530:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11548:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11522:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "11522:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "11618:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "11624:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 538,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "11628:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "11597:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11597:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "11597:38:0"
											},
											{
												"assignments": [
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "fromBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 619,
														"src": "11646:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11646:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 543,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "11668:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 545,
													"indexExpression": {
														"argumentTypes": null,
														"id": 544,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "11678:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11668:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11646:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 548,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "11701:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 549,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "11716:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11701:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11724:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11693:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "11693:72:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 554,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "11802:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 556,
														"indexExpression": {
															"argumentTypes": null,
															"id": 555,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "11812:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11802:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 557,
															"name": "fromBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "11820:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 558,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "11834:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11820:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11802:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "11802:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 562,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "12017:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 564,
														"indexExpression": {
															"argumentTypes": null,
															"id": 563,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "12027:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12017:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 565,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "12034:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12017:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "12017:23:0"
											},
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "BalanceFrom",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 619,
														"src": "12064:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 568,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12064:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 573,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 571,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "12093:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 570,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "12083:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12083:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12064:32:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 574,
															"name": "BalanceFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "12110:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12125:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12110:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 577,
																	"name": "sentCOF",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "12130:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$219_storage_$",
																		"typeString": "mapping(address => struct Coffee.UserInfo storage ref)"
																	}
																},
																"id": 579,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 578,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "12138:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12130:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$219_storage",
																	"typeString": "struct Coffee.UserInfo storage ref"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "myHigherUpLock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 218,
															"src": "12130:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12160:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12130:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12110:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 606,
												"nodeType": "IfStatement",
												"src": "12106:197:0",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "12162:141:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 584,
																			"name": "sentCOF",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "12176:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$219_storage_$",
																				"typeString": "mapping(address => struct Coffee.UserInfo storage ref)"
																			}
																		},
																		"id": 586,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 585,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 510,
																			"src": "12184:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12176:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$219_storage",
																			"typeString": "struct Coffee.UserInfo storage ref"
																		}
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "myHigherUp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 216,
																	"src": "12176:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 588,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "12201:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12176:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 590,
															"nodeType": "ExpressionStatement",
															"src": "12176:29:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 591,
																			"name": "sentCOF",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "12219:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$219_storage_$",
																				"typeString": "mapping(address => struct Coffee.UserInfo storage ref)"
																			}
																		},
																		"id": 593,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 592,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 510,
																			"src": "12227:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12219:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$219_storage",
																			"typeString": "struct Coffee.UserInfo storage ref"
																		}
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalPromote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 214,
																	"src": "12219:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12247:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12219:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "12219:29:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 598,
																			"name": "sentCOF",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "12262:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$219_storage_$",
																				"typeString": "mapping(address => struct Coffee.UserInfo storage ref)"
																			}
																		},
																		"id": 600,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 599,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 510,
																			"src": "12270:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12262:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$219_storage",
																			"typeString": "struct Coffee.UserInfo storage ref"
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "myHigherUpLock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "12262:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12291:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12262:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 604,
															"nodeType": "ExpressionStatement",
															"src": "12262:30:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 608,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "12327:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 609,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "12333:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 610,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "12337:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "12318:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12318:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "EmitStatement",
												"src": "12313:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 614,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "12375:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "12381:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 616,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "12385:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "12355:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12355:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "12355:37:0"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "10878:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 620,
												"src": "11354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 620,
												"src": "11376:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 620,
												"src": "11396:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11344:72:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11434:0:0"
									},
									"scope": 857,
									"src": "11326:1073:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "12740:476:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 629,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "12758:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12777:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12769:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 630,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12769:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12769:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "12758:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12781:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 628,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12750:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "12750:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12855:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12847:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12847:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 643,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "12859:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 644,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "12868:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 638,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "12826:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12826:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "12826:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 647,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "12886:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 648,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "12902:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12886:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "12886:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 651,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "13057:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 653,
														"indexExpression": {
															"argumentTypes": null,
															"id": 652,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "13067:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13057:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 654,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "13079:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13057:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "13057:28:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13130:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13122:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 658,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13122:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13122:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 662,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "13134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 663,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "13143:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 657,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "13113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13113:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "EmitStatement",
												"src": "13108:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13189:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13181:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13181:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 671,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "13193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 672,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "13202:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 666,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "13161:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13161:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "13161:48:0"
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "12405:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 676,
												"src": "12690:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 676,
												"src": "12707:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12689:33:0"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12740:0:0"
									},
									"scope": 857,
									"src": "12675:541:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "13601:600:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 685,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "13619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13638:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13630:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 686,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13630:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13630:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "13619:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13642:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13611:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "13611:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 695,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "13710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13727:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13719:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13719:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13719:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 700,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "13731:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "13689:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13689:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "13689:49:0"
											},
											{
												"assignments": [
													704
												],
												"declarations": [
													{
														"constant": false,
														"id": 704,
														"mutability": "mutable",
														"name": "accountBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 746,
														"src": "13749:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 703,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13749:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 705,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "13774:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 707,
													"indexExpression": {
														"argumentTypes": null,
														"id": 706,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "13784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13774:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13749:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 710,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "13810:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 711,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "13828:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13810:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13836:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13802:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13802:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "13802:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 716,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "13910:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 718,
														"indexExpression": {
															"argumentTypes": null,
															"id": 717,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "13920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13910:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 719,
															"name": "accountBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "13931:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 720,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "13948:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13931:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13910:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "13910:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 724,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "14047:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 725,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "14063:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14047:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "14047:22:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 729,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "14107:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14124:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14116:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14116:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14116:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 734,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "14128:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 728,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "14098:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14098:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "EmitStatement",
												"src": "14093:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 738,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "14166:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14183:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14175:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 739,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14175:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14175:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 743,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "14187:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "14146:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14146:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "14146:48:0"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "13222:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "13551:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "13568:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13550:33:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13601:0:0"
									},
									"scope": 857,
									"src": "13536:665:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "14737:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 758,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "14755:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14772:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14764:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 759,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14764:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14764:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14755:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14776:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14747:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14747:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "14747:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 768,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "14833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14852:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14844:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14844:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14833:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14856:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14825:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14825:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "14825:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 777,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "14904:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 780,
															"indexExpression": {
																"argumentTypes": null,
																"id": 778,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "14916:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14904:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 781,
														"indexExpression": {
															"argumentTypes": null,
															"id": 779,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "14923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14904:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 782,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "14934:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14904:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "14904:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 786,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "14964:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 787,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "14971:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 788,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "14980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 785,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "14955:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14955:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "EmitStatement",
												"src": "14950:37:0"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "14207:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "14651:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "14674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "14699:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14641:78:0"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14737:0:0"
									},
									"scope": 857,
									"src": "14624:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "15395:327:0",
										"statements": [
											{
												"assignments": [
													803
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 833,
														"src": "15405:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 802,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 808,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 805,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "15442:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 806,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "15449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 804,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "15432:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15432:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15405:52:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 809,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "15471:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15496:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 810,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -27,
																"src": "15491:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15491:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15491:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15471:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 832,
												"nodeType": "IfStatement",
												"src": "15467:249:0",
												"trueBody": {
													"id": 831,
													"nodeType": "Block",
													"src": "15510:206:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 817,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "15532:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 818,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "15552:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15532:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15560:31:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 816,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "15524:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15524:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "15524:68:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 824,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "15646:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 825,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "15653:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 826,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "15662:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 827,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "15681:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15662:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 823,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "15637:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15637:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "15637:51:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "15000:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 834,
												"src": "15309:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 834,
												"src": "15332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 834,
												"src": "15357:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15299:78:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15395:0:0"
									},
									"scope": 857,
									"src": "15275:447:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "16425:2:0",
										"statements": []
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "15728:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 845,
												"src": "16345:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 845,
												"src": "16367:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 845,
												"src": "16387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16335:72:0"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16425:0:0"
									},
									"scope": 857,
									"src": "16306:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "17133:2:0",
										"statements": []
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "16433:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 856,
												"src": "17053:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 856,
												"src": "17075:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 856,
												"src": "17095:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17043:72:0"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17133:0:0"
									},
									"scope": 857,
									"src": "17015:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 858,
							"src": "4701:12436:0"
						}
					],
					"src": "105:17032:0"
				},
				"id": 0
			}
		}
	}
}